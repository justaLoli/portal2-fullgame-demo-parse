import { SourceDemoBuffer } from '../buffer.js';
import type { SourceDemo } from '../demo.js';
export declare class StringTable {
    name?: string;
    entries?: StringTableEntry[];
    classes?: StringTableClass[];
    read(buf: SourceDemoBuffer, demo: SourceDemo): void;
    write(buf: SourceDemoBuffer, demo: SourceDemo): void;
}
export declare class StringTableEntry {
    name: string;
    length?: number;
    dataBuffer?: SourceDemoBuffer;
    data?: StringTableEntries;
    constructor(name: string);
    read(buf: SourceDemoBuffer, type: StringTableEntryType | undefined, demo: SourceDemo): void;
    write(buf: SourceDemoBuffer, demo: SourceDemo): void;
}
export declare class StringTableClass {
    name: string;
    data?: string;
    constructor(name: string);
    read(buf: SourceDemoBuffer): void;
    write(buf: SourceDemoBuffer): void;
}
export declare class PlayerInfo {
    version?: number;
    xuid?: number;
    name?: string;
    userId?: number;
    guid?: string;
    friendsId?: number;
    friendsName?: string;
    fakePlayer?: boolean;
    isHltv?: boolean;
    customFiles?: [number, number, number, number];
    filesDownloaded?: number;
    read(buf: SourceDemoBuffer, demo: SourceDemo): void;
    write(buf: SourceDemoBuffer, demo: SourceDemo): void;
}
export type StringTableEntries = PlayerInfo;
export type StringTableEntryType = typeof PlayerInfo;
export declare const StringTableEntryTypes: Record<string, StringTableEntryType>;
//# sourceMappingURL=StringTables.d.ts.map