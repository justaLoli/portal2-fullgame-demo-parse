import type { SourceDemoBuffer } from '../buffer.js';
import type { SourceDemo } from '../demo.js';
export declare const SendPropType: {
    Int: number;
    Float: number;
    Vector: number;
    VectorXy: number;
    String: number;
    Array: number;
    SendTable: number;
    Int64: number;
};
export declare const SendPropFlags: {
    Unsigned: number;
    Coord: number;
    Noscale: number;
    Rounddown: number;
    Roundup: number;
    Normal: number;
    Exclude: number;
    Xyze: number;
    InsideArray: number;
    ProxyAlwaysYes: number;
    IsAVectorElem: number;
    Collapsible: number;
    CoordMp: number;
    CoordMpLowPrecision: number;
    CoordMpIntegral: number;
    CellCoord: number;
    CellCoordLowPrecision: number;
    CellCoordIntegral: number;
    ChangesOften: number;
    VarInt: number;
};
export declare class SendTable {
    needsDecoder?: boolean;
    netTableName?: string;
    props?: SendProp[];
    read(buf: SourceDemoBuffer, demo: SourceDemo): void;
    write(buf: SourceDemoBuffer, demo: SourceDemo): void;
}
export declare class SendProp {
    type?: number;
    varName?: string;
    flags?: number;
    unk?: number;
    excludeDtName?: string;
    lowValue?: number;
    highValue?: number;
    numBits?: number;
    elements?: number;
    read(buf: SourceDemoBuffer, demo: SourceDemo): void;
    write(buf: SourceDemoBuffer, demo: SourceDemo): void;
}
export declare class ServerClassInfo {
    classId?: number;
    className?: string;
    dataTableName?: string;
    read(buf: SourceDemoBuffer): void;
    write(buf: SourceDemoBuffer): void;
}
//# sourceMappingURL=DataTables.d.ts.map