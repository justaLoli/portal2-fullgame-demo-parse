import type { StringTableEntry } from '../types/StringTables.js';
export declare enum SteamIdUniverse {
    Individual = 0,
    Public = 1,
    Beta = 2,
    Internal = 3,
    Dev = 4,
    Rc = 5
}
export declare enum SteamIdType {
    Invalid = 0,
    Individual = 1,
    Multiseat = 2,
    GameServer = 3,
    AnonGameServer = 4,
    Pending = 5,
    ContentServer = 6,
    Clan = 7,
    Chat = 8,
    P2PSuperSeeder = 9,
    AnonUser = 10
}
export declare enum SteamIdInstance {
    All = 0,
    Desktop = 1,
    Console = 2,
    Web = 4
}
export declare class SteamId {
    universe: bigint;
    type: bigint;
    instance: bigint;
    account: bigint;
    isValid: boolean;
    constructor(props?: {
        account: bigint;
        universe: bigint;
        isValid: boolean;
    });
    static from(steamId: string): SteamId;
    toSteamId64(): bigint | null;
}
export declare enum SteamIdResult {
    Ok = 0,
    NoPlayerInfoGuid = 1,
    InvalidSteamId = 2
}
export type PlayerSteamDataResult = [null, SteamIdResult.NoPlayerInfoGuid] | [guid: string, SteamIdResult.InvalidSteamId] | [{
    playerName: string | null;
    steamId: string | null;
}, SteamIdResult.Ok];
export declare const getPlayerSteamData: (playerInfo: StringTableEntry) => PlayerSteamDataResult;
//# sourceMappingURL=steam.d.ts.map