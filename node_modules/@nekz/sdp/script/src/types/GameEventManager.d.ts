import type { SourceDemoBuffer } from '../buffer.js';
export declare class GameEventDescriptor {
    eventId?: number;
    name?: string;
    keys?: Map<string, number>;
    read(buf: SourceDemoBuffer): void;
    write(buf: SourceDemoBuffer): void;
}
export declare class GameEvent {
    descriptor: GameEventDescriptor;
    dataKeys: Map<string, string | number | boolean>;
    constructor(descriptor: GameEventDescriptor);
    get<T extends ReturnType<GameEvent['dataKeys']['get']>>(keyName: string): T;
    set<T extends Parameters<GameEvent['dataKeys']['set']>['1']>(keyName: string, defaultValue: T): T;
}
export declare class GameEventManager {
    gameEvents: GameEventDescriptor[];
    constructor(gameEvents: GameEventDescriptor[]);
    deserializeEvent(buf: SourceDemoBuffer): GameEvent;
    serializeEvent(event: GameEvent, buf: SourceDemoBuffer): GameEvent;
}
//# sourceMappingURL=GameEventManager.d.ts.map