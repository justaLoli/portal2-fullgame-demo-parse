{
  "version": 3,
  "sources": ["../../node_modules/@nekz/sdp/esm/src/types/CmdInfo.js", "../../node_modules/@nekz/sdp/esm/src/types/DataTables.js", "../../node_modules/@nekz/sdp/esm/src/types/GameEventManager.js", "../../node_modules/@nekz/sdp/esm/src/types/NetMessages.js", "../../node_modules/@nekz/sdp/esm/src/types/SoundInfo.js", "../../node_modules/@nekz/sdp/esm/src/lib/bit-buffer.js", "../../node_modules/@nekz/sdp/esm/src/types/QAngle.js", "../../node_modules/@nekz/sdp/esm/src/types/Vector.js", "../../node_modules/@nekz/sdp/esm/src/buffer.js", "../../node_modules/@nekz/sdp/esm/src/types/UserMessages.js", "../../node_modules/@nekz/sdp/esm/src/types/StringTables.js", "../../node_modules/@nekz/sdp/esm/src/types/UserCmd.js", "../../node_modules/@nekz/sdp/esm/src/messages.js", "../../node_modules/@nekz/sdp/esm/src/speedrun/games/Portal.js", "../../node_modules/@nekz/sdp/esm/src/speedrun/games/Portal2.js", "../../node_modules/@nekz/sdp/esm/src/speedrun/games/PortalStoriesMel.js", "../../node_modules/@nekz/sdp/esm/src/speedrun/games/ApertureTag.js", "../../node_modules/@nekz/sdp/esm/src/speedrun/games/mod.js", "../../node_modules/@nekz/sdp/esm/src/demo.js", "../../node_modules/@nekz/sdp/esm/src/parser.js"],
  "sourcesContent": ["// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nexport class CmdInfo {\n    constructor() {\n        Object.defineProperty(this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"viewOrigin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"viewAngles\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"localViewAngles\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"viewOrigin2\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"viewAngles2\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"localViewAngles2\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.flags = buf.readInt32();\n        this.viewOrigin = buf.readVector();\n        this.viewAngles = buf.readQAngle();\n        this.localViewAngles = buf.readQAngle();\n        this.viewOrigin2 = buf.readVector();\n        this.viewAngles2 = buf.readQAngle();\n        this.localViewAngles2 = buf.readQAngle();\n        return this;\n    }\n    write(buf) {\n        buf.writeInt32(this.flags);\n        buf.writeVector(this.viewOrigin);\n        buf.writeQAngle(this.viewAngles);\n        buf.writeQAngle(this.localViewAngles);\n        buf.writeVector(this.viewOrigin2);\n        buf.writeQAngle(this.viewAngles2);\n        buf.writeQAngle(this.localViewAngles2);\n        return this;\n    }\n}\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nexport const SendPropType = {\n    Int: 0,\n    Float: 1,\n    Vector: 2,\n    VectorXy: 3,\n    String: 4,\n    Array: 5,\n    SendTable: 6,\n    Int64: 7,\n};\nexport const SendPropFlags = {\n    Unsigned: 1 << 0,\n    Coord: 1 << 1,\n    Noscale: 1 << 2,\n    Rounddown: 1 << 3,\n    Roundup: 1 << 4,\n    Normal: 1 << 5,\n    Exclude: 1 << 6,\n    Xyze: 1 << 7,\n    InsideArray: 1 << 8,\n    ProxyAlwaysYes: 1 << 9,\n    IsAVectorElem: 1 << 10,\n    Collapsible: 1 << 11,\n    CoordMp: 1 << 12,\n    CoordMpLowPrecision: 1 << 13,\n    CoordMpIntegral: 1 << 14,\n    CellCoord: 1 << 15,\n    CellCoordLowPrecision: 1 << 16,\n    CellCoordIntegral: 1 << 17,\n    ChangesOften: 1 << 18,\n    VarInt: 1 << 19,\n};\nexport class SendTable {\n    constructor() {\n        Object.defineProperty(this, \"needsDecoder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"netTableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"props\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf, demo) {\n        this.needsDecoder = buf.readBoolean();\n        this.netTableName = buf.readASCIIString();\n        this.props = [];\n        let props = buf.readBits(10, false);\n        while (props--) {\n            const prop = new SendProp();\n            prop.read(buf, demo);\n            this.props.push(prop);\n        }\n    }\n    write(buf, demo) {\n        buf.writeBoolean(this.needsDecoder);\n        buf.writeASCIIString(this.netTableName);\n        buf.writeBits(this.props.length, 10);\n        this.props?.forEach((prop) => prop.write(buf, demo));\n    }\n}\nexport class SendProp {\n    constructor() {\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"varName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeDtName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lowValue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"highValue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"numBits\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"elements\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf, demo) {\n        this.type = buf.readBits(5, false);\n        this.varName = buf.readASCIIString();\n        this.flags = buf.readBits(demo.demoProtocol === 2 ? 11 : 16, false);\n        if (demo.isPortal2Engine) {\n            this.unk = buf.readBits(11, false);\n        }\n        if (this.type === SendPropType.SendTable ||\n            (this.flags & SendPropFlags.Exclude) !== 0) {\n            this.excludeDtName = buf.readASCIIString();\n        }\n        else if (this.type === SendPropType.String ||\n            this.type === SendPropType.Int ||\n            this.type === SendPropType.Float ||\n            this.type === SendPropType.Vector ||\n            this.type === SendPropType.VectorXy) {\n            this.lowValue = buf.readFloat32();\n            this.highValue = buf.readFloat32();\n            this.numBits = buf.readBits(7, false);\n        }\n        else if (this.type === SendPropType.Array) {\n            this.elements = buf.readBits(10, false);\n        }\n        else {\n            throw new Error('Invalid prop type: ' + this.type);\n        }\n    }\n    write(buf, demo) {\n        buf.writeBits(this.type, 5);\n        buf.writeASCIIString(this.varName);\n        buf.writeBits(this.flags, demo.demoProtocol === 2 ? 11 : 16);\n        if (demo.isPortal2Engine) {\n            buf.writeBits(this.unk, 11);\n        }\n        if (this.type === SendPropType.SendTable ||\n            (this.flags & SendPropFlags.Exclude) !== 0) {\n            buf.writeASCIIString(this.excludeDtName);\n        }\n        else if (this.type === SendPropType.String ||\n            this.type === SendPropType.Int ||\n            this.type === SendPropType.Float ||\n            this.type === SendPropType.Vector ||\n            this.type === SendPropType.VectorXy) {\n            buf.writeFloat32(this.lowValue);\n            buf.writeFloat32(this.highValue);\n            buf.writeBits(this.numBits, 7);\n        }\n        else if (this.type === SendPropType.Array) {\n            buf.writeBits(this.elements, 10);\n        }\n        else {\n            throw new Error('Invalid prop type: ' + this.type);\n        }\n    }\n}\nexport class ServerClassInfo {\n    constructor() {\n        Object.defineProperty(this, \"classId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"className\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dataTableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.classId = buf.readInt16();\n        this.className = buf.readASCIIString();\n        this.dataTableName = buf.readASCIIString();\n    }\n    write(buf) {\n        buf.writeInt16(this.classId);\n        buf.writeASCIIString(this.className);\n        buf.writeASCIIString(this.dataTableName);\n    }\n}\n", "export class GameEventDescriptor {\n    constructor() {\n        Object.defineProperty(this, \"eventId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"keys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.eventId = buf.readBits(9);\n        this.name = buf.readASCIIString();\n        this.keys = new Map();\n        let type = buf.readBits(3);\n        while (type !== 0) {\n            this.keys.set(buf.readASCIIString(), type);\n            type = buf.readBits(3);\n        }\n    }\n    write(buf) {\n        buf.writeBits(this.eventId, 9);\n        buf.writeASCIIString(this.name);\n        this.keys.forEach((type, key) => {\n            buf.writeBits(type, 3);\n            buf.writeASCIIString(key);\n        });\n        buf.writeBits(0, 3);\n    }\n}\nexport class GameEvent {\n    constructor(descriptor) {\n        Object.defineProperty(this, \"descriptor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dataKeys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.descriptor = descriptor;\n        this.dataKeys = new Map();\n    }\n    get(keyName) {\n        return this.dataKeys.get(keyName);\n    }\n    set(keyName, defaultValue) {\n        this.dataKeys.set(keyName, defaultValue);\n        return defaultValue;\n    }\n}\nexport class GameEventManager {\n    constructor(gameEvents) {\n        Object.defineProperty(this, \"gameEvents\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.gameEvents = gameEvents;\n    }\n    deserializeEvent(buf) {\n        const eventId = buf.readBits(9);\n        const descriptor = this.gameEvents.find((descriptor) => descriptor.eventId === eventId);\n        if (!descriptor) {\n            throw new Error(`Unknown event id ${eventId}!`);\n        }\n        const event = new GameEvent(descriptor);\n        for (const [keyName, type] of descriptor.keys.entries()) {\n            switch (type) {\n                case 0:\n                    break;\n                case 1:\n                    event.set(keyName, buf.readASCIIString());\n                    break;\n                case 2:\n                    event.set(keyName, buf.readFloat32());\n                    break;\n                case 3:\n                    event.set(keyName, buf.readInt32());\n                    break;\n                case 4:\n                    event.set(keyName, buf.readInt16());\n                    break;\n                case 5:\n                    event.set(keyName, buf.readInt8());\n                    break;\n                case 6:\n                    event.set(keyName, buf.readBoolean());\n                    break;\n                default:\n                    throw new Error(`Unknown type ${type} for key ${keyName}!`);\n            }\n        }\n        return event;\n    }\n    serializeEvent(event, buf) {\n        buf.writeBits(event.descriptor.eventId, 9);\n        for (const [keyName, type] of event.descriptor.keys.entries()) {\n            switch (type) {\n                case 0:\n                    break;\n                case 1:\n                    buf.writeASCIIString(event.get(keyName));\n                    break;\n                case 2:\n                    buf.writeFloat32(event.get(keyName));\n                    break;\n                case 3:\n                    buf.writeInt32(event.get(keyName));\n                    break;\n                case 4:\n                    buf.writeInt16(event.get(keyName));\n                    break;\n                case 5:\n                    buf.writeInt8(event.get(keyName));\n                    break;\n                case 6:\n                    buf.writeBoolean(event.get(keyName));\n                    break;\n                default:\n                    throw new Error(`Unknown type ${type} for key ${keyName}!`);\n            }\n        }\n        return event;\n    }\n}\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nimport { SoundInfo } from './SoundInfo.js';\nimport { GameEventDescriptor, GameEventManager } from './GameEventManager.js';\nimport { SourceDemoBuffer } from '../buffer.js';\nimport { UserMessages } from './UserMessages.js';\nexport class NetMessage {\n    constructor(type) {\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.type = type;\n    }\n    getType() {\n        return this.type;\n    }\n    getName() {\n        return this.constructor.name;\n    }\n    read(_buf, _demo) {\n        throw new Error(`read() for ${this.constructor.name} not implemented!`);\n    }\n    write(_buf, _demo) {\n        throw new Error(`write() for ${this.constructor.name} not implemented!`);\n    }\n}\nexport class NetNop extends NetMessage {\n    read() { }\n    write() { }\n}\nexport class NetDisconnect extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.text = buf.readASCIIString();\n    }\n    write(buf) {\n        buf.writeASCIIString(this.text);\n    }\n}\nexport class NetFile extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"transferId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fileName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fileRequested\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf, demo) {\n        this.transferId = buf.readInt32();\n        this.fileName = buf.readASCIIString();\n        this.fileRequested = buf.readBoolean();\n        if (demo.demoProtocol === 4) {\n            this.unk = buf.readBoolean();\n        }\n    }\n    write(buf, demo) {\n        buf.writeInt32(this.transferId);\n        buf.writeASCIIString(this.fileName);\n        buf.writeBoolean(this.fileRequested);\n        if (demo.demoProtocol === 4) {\n            buf.writeBoolean(this.unk);\n        }\n    }\n}\nexport class NetSplitScreenUser extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"unk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.unk = buf.readBoolean();\n    }\n    write(buf) {\n        buf.writeBoolean(this.unk);\n    }\n}\nexport class NetTick extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"tick\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"hostFrameTime\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"hostFrameTimeStdDeviation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        const NET_TICK_SCALEUP = 100_000;\n        this.tick = buf.readInt32();\n        this.hostFrameTime = buf.readInt16() / NET_TICK_SCALEUP;\n        this.hostFrameTimeStdDeviation = buf.readInt16() / NET_TICK_SCALEUP;\n    }\n    write(buf) {\n        const NET_TICK_SCALEUP = 100_000;\n        buf.writeInt32(this.tick);\n        const [hostFrameTime, hostFrameTimeStdDeviation] = new Float32Array([\n            this.hostFrameTime * NET_TICK_SCALEUP,\n            this.hostFrameTimeStdDeviation * NET_TICK_SCALEUP,\n        ]);\n        buf.writeInt16(hostFrameTime);\n        buf.writeInt16(hostFrameTimeStdDeviation);\n    }\n}\nexport class NetStringCmd extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"command\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.command = buf.readASCIIString();\n    }\n    write(buf) {\n        buf.writeASCIIString(this.command);\n    }\n}\nexport class NetSetConVar extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"convars\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.convars = [];\n        let length = buf.readInt8();\n        while (length--) {\n            this.convars.push({\n                name: buf.readASCIIString(),\n                value: buf.readASCIIString(),\n            });\n        }\n    }\n    write(buf) {\n        buf.writeInt8(this.convars.length);\n        this.convars.forEach(({ name, value }) => {\n            buf.writeASCIIString(name);\n            buf.writeASCIIString(value);\n        });\n    }\n}\nexport class NetSignonState extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"signonState\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"spawnCount\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"numServerPlayers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"playersNetworkIdsCount\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"playersNetworkIds\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"mapNameLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"mapName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf, demo) {\n        this.signonState = buf.readInt8();\n        this.spawnCount = buf.readInt32();\n        if (demo.isNewEngine()) {\n            this.numServerPlayers = buf.readInt32();\n            this.playersNetworkIdsCount = buf.readInt32();\n            if (this.playersNetworkIdsCount > 0) {\n                this.playersNetworkIds = buf.readArrayBuffer(this.playersNetworkIdsCount);\n            }\n            this.mapNameLength = buf.readInt32();\n            if (this.mapNameLength > 0) {\n                this.mapName = buf.readASCIIString(this.mapNameLength);\n            }\n        }\n    }\n    write(buf, demo) {\n        buf.writeInt8(this.signonState);\n        buf.writeInt32(this.spawnCount);\n        if (demo.isNewEngine()) {\n            buf.writeInt32(this.numServerPlayers);\n            buf.writeInt32(this.playersNetworkIdsCount);\n            if (this.playersNetworkIdsCount > 0) {\n                buf.writeArrayBuffer(this.playersNetworkIds, this.playersNetworkIdsCount);\n            }\n            buf.writeInt32(this.mapNameLength);\n            if (this.mapNameLength > 0) {\n                buf.writeASCIIString(this.mapName, this.mapNameLength);\n            }\n        }\n    }\n}\nexport class SvcServerInfo extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"protocol\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serverCount\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"isHltv\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"isDedicated\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientCrc\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxClasses\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"mapCrc\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"playerSlot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxClients\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tickInterval\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cOs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"gameDir\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"mapName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"skyName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"hostName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf, demo) {\n        this.protocol = buf.readInt16();\n        this.serverCount = buf.readInt32();\n        this.isHltv = buf.readBoolean();\n        this.isDedicated = buf.readBoolean();\n        this.clientCrc = buf.readInt32();\n        this.maxClasses = buf.readInt16();\n        this.mapCrc = buf.readInt32();\n        this.playerSlot = buf.readInt8();\n        this.maxClients = buf.readInt8();\n        if (demo.isNewEngine()) {\n            this.unk = buf.readInt32();\n        }\n        else if (demo.networkProtocol === 24) {\n            this.unk = buf.readBits(96);\n        }\n        this.tickInterval = buf.readFloat32();\n        this.cOs = String.fromCharCode(buf.readInt8());\n        this.gameDir = buf.readASCIIString();\n        this.mapName = buf.readASCIIString();\n        this.skyName = buf.readASCIIString();\n        this.hostName = buf.readASCIIString();\n    }\n    write(buf, demo) {\n        buf.writeInt16(this.protocol);\n        buf.writeInt32(this.serverCount);\n        buf.writeBoolean(this.isHltv);\n        buf.writeBoolean(this.isDedicated);\n        buf.writeInt32(this.clientCrc);\n        buf.writeInt16(this.maxClasses);\n        buf.writeInt32(this.mapCrc);\n        buf.writeInt8(this.playerSlot);\n        buf.writeInt8(this.maxClients);\n        if (demo.isNewEngine()) {\n            buf.writeInt32(this.unk);\n        }\n        else if (demo.networkProtocol === 24) {\n            buf.writeBits(this.unk, 96);\n        }\n        buf.writeFloat32(this.tickInterval);\n        buf.writeInt8(this.cOs.charCodeAt(0));\n        buf.writeASCIIString(this.gameDir);\n        buf.writeASCIIString(this.mapName);\n        buf.writeASCIIString(this.skyName);\n        buf.writeASCIIString(this.hostName);\n    }\n}\nexport class SvcSendTable extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"needsDecoder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"propsLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"props\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.needsDecoder = buf.readBoolean();\n        this.propsLength = buf.readInt16();\n        this.props = buf.readBits(this.propsLength);\n    }\n    write(buf) {\n        buf.writeBoolean(this.needsDecoder);\n        buf.writeInt16(this.propsLength);\n        buf.writeBits(this.props, this.propsLength);\n    }\n}\nexport class SvcClassInfo extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"length\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"createOnClient\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serverClasses\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.length = buf.readInt16();\n        this.createOnClient = buf.readBoolean();\n        if (!this.createOnClient) {\n            this.serverClasses = [];\n            let count = this.length;\n            while (count--) {\n                this.serverClasses.push({\n                    classId: buf.readBits(Math.log2(count) + 1),\n                    className: buf.readASCIIString(),\n                    dataTableName: buf.readASCIIString(),\n                });\n            }\n        }\n    }\n    write(buf) {\n        buf.writeInt16(this.length);\n        buf.writeBoolean(this.createOnClient);\n        if (!this.createOnClient) {\n            let count = this.length;\n            this.serverClasses.forEach(({ classId, className, dataTableName }) => {\n                --count;\n                buf.writeBits(classId, Math.log2(count) + 1);\n                buf.writeASCIIString(className);\n                buf.writeASCIIString(dataTableName);\n            });\n        }\n    }\n}\nexport class SvcSetPause extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"paused\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.paused = buf.readBoolean();\n    }\n    write(buf) {\n        buf.writeBoolean(this.paused);\n    }\n}\nexport class SvcCreateStringTable extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxEntries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"numEntries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"userDataFixedSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"userDataSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"userDataSizeBits\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stringDataLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stringData\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf, demo) {\n        this.name = buf.readASCIIString();\n        this.maxEntries = buf.readInt16();\n        this.numEntries = buf.readBits(Math.log2(this.maxEntries) + 1);\n        this.stringDataLength = buf.readBits(20);\n        this.userDataFixedSize = buf.readBoolean();\n        this.userDataSize = this.userDataFixedSize ? buf.readBits(12) : 0;\n        this.userDataSizeBits = this.userDataFixedSize ? buf.readBits(4) : 0;\n        this.flags = buf.readBits(demo.isNewEngine() ? 2 : 1);\n        this.stringData = buf.readBitStream(this.stringDataLength);\n    }\n    write(buf, demo) {\n        buf.writeASCIIString(this.name);\n        buf.writeInt16(this.maxEntries);\n        buf.writeBits(this.numEntries, Math.log2(this.maxEntries) + 1);\n        buf.writeBits(this.stringDataLength, 20);\n        buf.writeBoolean(this.userDataFixedSize);\n        this.userDataFixedSize && buf.writeBits(this.userDataSize, 12);\n        this.userDataFixedSize && buf.writeBits(this.userDataSizeBits, 4);\n        buf.writeBits(this.flags, demo.isNewEngine() ? 2 : 1);\n        buf.writeBitStream(this.stringData, this.stringDataLength);\n    }\n}\nexport class SvcUpdateStringTable extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"tableId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"numChangedEntries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stringDataLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stringData\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.tableId = buf.readBits(5);\n        this.numChangedEntries = buf.readBoolean() ? buf.readInt16() : 1;\n        this.stringDataLength = buf.readBits(20);\n        this.stringData = buf.readBitStream(this.stringDataLength);\n    }\n    write(buf) {\n        buf.writeBits(this.tableId, 5);\n        buf.writeBoolean(this.numChangedEntries !== 1);\n        this.numChangedEntries !== 1 && buf.writeInt16(this.numChangedEntries);\n        buf.writeBits(this.stringDataLength, 20);\n        buf.writeBitStream(this.stringData, this.stringDataLength);\n    }\n}\nexport class SvcVoiceInit extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"codec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"quality\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.codec = buf.readASCIIString();\n        this.quality = buf.readInt8();\n        if (this.quality === 255)\n            this.unk = buf.readFloat32();\n    }\n    write(buf) {\n        buf.writeASCIIString(this.codec);\n        buf.writeInt8(this.quality);\n        this.unk !== undefined && buf.writeFloat32(this.unk);\n    }\n}\nexport class SvcVoiceData extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"proximity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"voiceDataLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"voiceData\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.client = buf.readInt8();\n        this.proximity = buf.readInt8();\n        this.voiceDataLength = buf.readInt16();\n        this.voiceData = buf.readBitStream(this.voiceDataLength);\n    }\n    write(buf) {\n        buf.writeInt8(this.client);\n        buf.writeInt8(this.proximity);\n        buf.writeInt16(this.voiceDataLength);\n        buf.writeBitStream(this.voiceData, this.voiceDataLength);\n    }\n}\nexport class SvcPrint extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"message\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.message = buf.readASCIIString();\n    }\n    write(buf) {\n        buf.writeASCIIString(this.message);\n    }\n}\nexport class SvcSounds extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"reliableSound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"soundsLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"soundsDataLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"soundsData\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sounds\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf, demo) {\n        this.reliableSound = buf.readBoolean();\n        this.soundsLength = this.reliableSound ? 1 : buf.readBits(8);\n        this.soundsDataLength = this.reliableSound ? buf.readBits(8) : buf.readBits(16);\n        this.soundsData = buf.readBitStream(this.soundsDataLength);\n        this.sounds = [];\n        if (demo.demoProtocol === 3) {\n            let sounds = this.soundsLength;\n            while (sounds--) {\n                const sound = new SoundInfo();\n                sound.read(this.soundsData);\n                this.sounds.push(sound);\n            }\n        }\n    }\n    write(buf, demo) {\n        buf.writeBoolean(this.reliableSound);\n        !this.reliableSound && buf.writeBits(this.soundsLength, 8);\n        if (demo.demoProtocol === 3) {\n            const data = SourceDemoBuffer.allocateBits(this.soundsData.length);\n            this.sounds.forEach((sound) => sound.write(data));\n            this.soundsData = data.clone();\n        }\n        buf.writeBits(this.soundsDataLength, this.reliableSound ? 8 : 16);\n        buf.writeBitStream(this.soundsData, this.soundsDataLength);\n    }\n}\nexport class SvcSetView extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"entityIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.entityIndex = buf.readBits(11);\n    }\n    write(buf) {\n        buf.writeBits(this.entityIndex, 11);\n    }\n}\nexport class SvcFixAngle extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"relative\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"angle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.relative = buf.readBoolean();\n        this.angle = [buf.readInt16(), buf.readInt16(), buf.readInt16()];\n    }\n    write(buf) {\n        buf.writeBoolean(this.relative);\n        this.angle.forEach((ang) => buf.writeInt16(ang));\n    }\n}\nexport class SvcCrosshairAngle extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"angle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.angle = [buf.readInt16(), buf.readInt16(), buf.readInt16()];\n    }\n    write(buf) {\n        this.angle.forEach((ang) => buf.writeInt16(ang));\n    }\n}\nexport class SvcBspDecal extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"pos\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"decalTextureIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"entityIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"modelIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lowPriority\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.pos = buf.readVectorCoord();\n        this.decalTextureIndex = buf.readBits(9);\n        if (buf.readBoolean()) {\n            this.entityIndex = buf.readBits(11);\n            this.modelIndex = buf.readBits(11);\n        }\n        this.lowPriority = buf.readBoolean();\n    }\n    write(buf) {\n        buf.writeVectorCoord(this.pos);\n        buf.writeBits(this.decalTextureIndex, 9);\n        buf.writeBoolean(this.entityIndex !== undefined);\n        if (this.entityIndex !== undefined) {\n            buf.writeBits(this.entityIndex, 11);\n            buf.writeBits(this.modelIndex, 11);\n        }\n        buf.writeBoolean(this.lowPriority);\n    }\n}\nexport class SvcSplitScreen extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"unk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dataLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.unk = buf.readBits(1);\n        this.dataLength = buf.readBits(11);\n        this.data = buf.readBitStream(this.dataLength);\n    }\n    write(buf) {\n        buf.writeBits(this.unk, 1);\n        buf.writeBits(this.dataLength, 11);\n        buf.writeBitStream(this.data, this.dataLength);\n    }\n}\nexport class SvcUserMessage extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"msgType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"msgDataLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"msgData\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"userMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf, demo) {\n        this.msgType = buf.readInt8();\n        this.msgDataLength = buf.readBits(demo.isNewEngine() ? 12 : 11);\n        this.msgData = buf.readBitStream(this.msgDataLength);\n        if (demo.isPortal2Engine) {\n            const userMessageType = UserMessages.Portal2Engine[this.msgType];\n            if (userMessageType) {\n                this.userMessage = new userMessageType(this.msgType);\n                this.userMessage.read(this.msgData, demo);\n            }\n        }\n    }\n    write(buf, demo) {\n        buf.writeInt8(this.msgType);\n        if (this.userMessage) {\n            const data = SourceDemoBuffer.from(this.msgData);\n            this.userMessage.write(data, demo);\n            this.msgData = data.reset();\n        }\n        buf.writeBits(this.msgDataLength, demo.isNewEngine() ? 12 : 11);\n        buf.writeBitStream(this.msgData, this.msgDataLength);\n    }\n}\nexport class SvcEntityMessage extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"entityIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"classId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dataLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.entityIndex = buf.readBits(11);\n        this.classId = buf.readBits(9);\n        this.dataLength = buf.readBits(11);\n        this.data = buf.readBitStream(this.dataLength);\n    }\n    write(buf) {\n        buf.writeBits(this.entityIndex, 11);\n        buf.writeBits(this.classId, 9);\n        buf.writeBits(this.dataLength, 11);\n        buf.writeBitStream(this.data, this.dataLength);\n    }\n}\nexport class SvcGameEvent extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"event\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf, demo) {\n        this.data = buf.readBitStream(buf.readBits(11));\n        if (demo.gameEventManager) {\n            const data = SourceDemoBuffer.from(this.data);\n            this.event = demo.gameEventManager.deserializeEvent(data);\n        }\n    }\n    write(buf, demo) {\n        if (demo.gameEventManager) {\n            const data = SourceDemoBuffer.from(this.data);\n            demo.gameEventManager.serializeEvent(this.event, data);\n            this.data = data.reset();\n        }\n        buf.writeBits(this.data.length, 11);\n        buf.writeBitStream(this.data, this.data.length);\n    }\n}\nexport class SvcPacketEntities extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"maxEntries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"isDelta\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"deltaFrom\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"baseLine\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"updatedEntries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"updateBaseline\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dataLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.maxEntries = buf.readBits(11);\n        this.isDelta = buf.readBoolean();\n        this.deltaFrom = this.isDelta ? buf.readInt32() : 0;\n        this.baseLine = buf.readBoolean();\n        this.updatedEntries = buf.readBits(11);\n        this.dataLength = buf.readBits(20);\n        this.updateBaseline = buf.readBoolean();\n        this.data = buf.readBitStream(this.dataLength);\n    }\n    write(buf) {\n        buf.writeBits(this.maxEntries, 11);\n        buf.writeBoolean(this.isDelta);\n        this.isDelta && buf.writeInt32(this.deltaFrom);\n        buf.writeBoolean(this.baseLine);\n        buf.writeBits(this.updatedEntries, 11);\n        buf.writeBits(this.dataLength, 20);\n        buf.writeBoolean(this.updateBaseline);\n        buf.writeBitStream(this.data, this.dataLength);\n    }\n}\nexport class SvcTempEntities extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"numEntries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dataLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.numEntries = buf.readInt8();\n        this.dataLength = buf.readBits(17);\n        this.data = buf.readBitStream(this.dataLength);\n    }\n    write(buf) {\n        buf.writeInt8(this.numEntries);\n        buf.writeBits(this.data.length, 17);\n        buf.writeBitStream(this.data, this.dataLength);\n    }\n}\nexport class SvcPrefetch extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"soundIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.soundIndex = buf.readBits(13);\n    }\n    write(buf) {\n        buf.writeBits(this.soundIndex, 13);\n    }\n}\nexport class SvcMenu extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"menuType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dataLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.menuType = buf.readInt16();\n        this.dataLength = buf.readInt32();\n        this.data = buf.readBitStream(this.dataLength);\n    }\n    write(buf) {\n        buf.writeInt16(this.menuType);\n        buf.writeInt32(this.dataLength);\n        buf.writeBitStream(this.data, this.dataLength);\n    }\n}\nexport class SvcGameEventList extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dataLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf, demo) {\n        this.events = buf.readBits(9);\n        this.dataLength = buf.readBits(20);\n        this.data = buf.readBitStream(this.dataLength);\n        const gameEvents = [];\n        let events = this.events;\n        while (events--) {\n            const descriptor = new GameEventDescriptor();\n            descriptor.read(this.data);\n            gameEvents.push(descriptor);\n        }\n        demo.gameEventManager = new GameEventManager(gameEvents);\n    }\n    write(buf, demo) {\n        buf.writeBits(this.events, 9);\n        const data = SourceDemoBuffer.allocate(this.dataLength);\n        demo.gameEventManager.gameEvents.forEach((descriptor) => descriptor.write(data));\n        this.data = data.clone();\n        buf.writeBits(this.dataLength, 20);\n        buf.writeBitStream(this.data, this.dataLength);\n    }\n}\nexport class SvcGetCvarValue extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"cookie\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cvarName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.cookie = buf.readInt32();\n        this.cvarName = buf.readASCIIString();\n    }\n    write(buf) {\n        buf.writeInt32(this.cookie);\n        buf.writeASCIIString(this.cvarName);\n    }\n}\nexport class SvcCmdKeyValues extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"buffer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        const length = buf.readInt32();\n        this.buffer = buf.readArrayBuffer(length);\n    }\n    write(buf) {\n        buf.writeInt32(this.buffer.byteLength);\n        buf.writeArrayBuffer(this.buffer.buffer, this.buffer.byteLength);\n    }\n}\nexport class SvcPaintMapData extends NetMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"dataLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.dataLength = buf.readInt32();\n        this.data = buf.readBitStream(this.dataLength);\n    }\n    write(buf) {\n        buf.writeInt32(this.data.length);\n        buf.writeBitStream(this.data, this.dataLength);\n    }\n}\nexport const NetMessages = {\n    Portal2Engine: [\n        NetNop, // 0\n        NetDisconnect, // 1\n        NetFile, // 2\n        NetSplitScreenUser, // 3\n        NetTick, // 4\n        NetStringCmd, // 5\n        NetSetConVar, // 6\n        NetSignonState, // 7\n        SvcServerInfo, // 8\n        SvcSendTable, // 9\n        SvcClassInfo, // 10\n        SvcSetPause, // 11\n        SvcCreateStringTable, // 12\n        SvcUpdateStringTable, // 13\n        SvcVoiceInit, // 14\n        SvcVoiceData, // 15\n        SvcPrint, // 16\n        SvcSounds, // 17\n        SvcSetView, // 18\n        SvcFixAngle, // 19\n        SvcCrosshairAngle, // 20\n        SvcBspDecal, // 21\n        SvcSplitScreen, // 22\n        SvcUserMessage, // 23\n        SvcEntityMessage, // 24\n        SvcGameEvent, // 25\n        SvcPacketEntities, // 26\n        SvcTempEntities, // 27\n        SvcPrefetch, // 28\n        SvcMenu, // 29\n        SvcGameEventList, // 30\n        SvcGetCvarValue, // 31\n        SvcCmdKeyValues, // 32\n        SvcPaintMapData, // 33\n    ],\n    HalfLife2Engine: [\n        NetNop, // 0\n        NetDisconnect, // 1\n        NetFile, // 2\n        NetTick, // 3\n        NetStringCmd, // 4\n        NetSetConVar, // 5\n        NetSignonState, // 6\n        SvcPrint, // 7\n        SvcServerInfo, // 8\n        SvcSendTable, // 9\n        SvcClassInfo, // 10\n        SvcSetPause, // 11\n        SvcCreateStringTable, // 12\n        SvcUpdateStringTable, // 13\n        SvcVoiceInit, // 14\n        SvcVoiceData, // 15\n        undefined,\n        SvcSounds, // 17\n        SvcSetView, // 18\n        SvcFixAngle, // 19\n        SvcCrosshairAngle, // 20\n        SvcBspDecal, // 21\n        undefined,\n        SvcUserMessage, // 23\n        SvcEntityMessage, // 24\n        SvcGameEvent, // 25\n        SvcPacketEntities, // 26\n        SvcTempEntities, // 27\n        SvcPrefetch, // 28\n        SvcMenu, // 29\n        SvcGameEventList, // 30\n        SvcGetCvarValue, // 31\n        SvcCmdKeyValues, // 32\n    ],\n    NetMessage,\n    NetNop,\n    NetDisconnect,\n    NetFile,\n    NetSplitScreenUser,\n    NetTick,\n    NetStringCmd,\n    NetSetConVar,\n    NetSignonState,\n    SvcServerInfo,\n    SvcSendTable,\n    SvcClassInfo,\n    SvcSetPause,\n    SvcCreateStringTable,\n    SvcUpdateStringTable,\n    SvcVoiceInit,\n    SvcVoiceData,\n    SvcPrint,\n    SvcSounds,\n    SvcSetView,\n    SvcFixAngle,\n    SvcCrosshairAngle,\n    SvcBspDecal,\n    SvcSplitScreen,\n    SvcUserMessage,\n    SvcEntityMessage,\n    SvcGameEvent,\n    SvcPacketEntities,\n    SvcTempEntities,\n    SvcPrefetch,\n    SvcMenu,\n    SvcGameEventList,\n    SvcGetCvarValue,\n    SvcCmdKeyValues,\n    SvcPaintMapData,\n};\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nexport const SoundFlags = {\n    NoFlags: 0,\n    ChangeVol: 1 << 0,\n    ChangePitch: 1 << 1,\n    Stop: 1 << 2,\n    Spawning: 1 << 3,\n    Delay: 1 << 4,\n    StopLooping: 1 << 5,\n    Speaker: 1 << 6,\n    ShouldPause: 1 << 7,\n    IgnorePhonemes: 1 << 8,\n    IgnoreName: 1 << 9,\n};\nexport class SoundInfo {\n    constructor() {\n        Object.defineProperty(this, \"readEntityIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"readEntityIndexShort\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"entityIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"soundNum\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"channel\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"isAmbient\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"isSentence\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sequenceNumber\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"volume\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"soundLevel\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"pitch\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"delay\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"origin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"speakerEntity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.readEntityIndex = buf.readBoolean();\n        if (this.readEntityIndex) {\n            this.readEntityIndexShort = buf.readBoolean();\n            this.entityIndex = this.readEntityIndexShort ? buf.readBits(5) : buf.readBits(11);\n        }\n        this.soundNum = buf.readBoolean() ? buf.readBits(13) : 0;\n        this.flags = buf.readBoolean() ? buf.readBits(9) : 0;\n        this.channel = buf.readBoolean() ? buf.readBits(3) : 0;\n        this.isAmbient = buf.readBoolean();\n        this.isSentence = buf.readBoolean();\n        if (this.flags !== SoundFlags.Stop) {\n            if (buf.readBoolean()) {\n                this.sequenceNumber = 0;\n                // deno-lint-ignore no-dupe-else-if\n            }\n            else if (buf.readBoolean()) {\n                this.sequenceNumber = 1;\n            }\n            else {\n                this.sequenceNumber = buf.readBits(10);\n            }\n            this.volume = buf.readBoolean() ? buf.readBits(7) / 127 : 0;\n            this.soundLevel = buf.readBoolean() ? buf.readBits(9) : 0;\n            this.pitch = buf.readBoolean() ? buf.readBits(8) : 0;\n            if (buf.readBoolean()) {\n                this.delay = buf.readBits(13) / 1_000;\n                if (this.delay < 0) {\n                    this.delay *= 10;\n                }\n                this.delay -= 0.1;\n            }\n            else {\n                this.delay = 0;\n            }\n            this.origin = {\n                x: buf.readBoolean() ? buf.readBits(12) * 8 : 0,\n                y: buf.readBoolean() ? buf.readBits(12) * 8 : 0,\n                z: buf.readBoolean() ? buf.readBits(12) * 8 : 0,\n            };\n            this.speakerEntity = buf.readBoolean() ? buf.readBits(12) : 0;\n        }\n    }\n    write(buf) {\n        buf.writeBoolean(this.readEntityIndex);\n        if (this.readEntityIndex) {\n            buf.writeBoolean(this.readEntityIndexShort);\n            this.readEntityIndexShort ? buf.writeBits(this.entityIndex, 5) : buf.writeBits(this.entityIndex, 11);\n        }\n        buf.writeBoolean(this.soundNum !== 0);\n        if (this.soundNum !== 0)\n            buf.writeBits(this.soundNum, 13);\n        buf.writeBoolean(this.flags !== 0);\n        if (this.flags !== 0)\n            buf.writeBits(this.flags, 9);\n        buf.writeBoolean(this.channel !== 0);\n        if (this.channel !== 0)\n            buf.writeBits(this.channel, 3);\n        buf.writeBoolean(this.isAmbient);\n        buf.writeBoolean(this.isSentence);\n        if (this.flags !== SoundFlags.Stop) {\n            buf.writeBoolean(this.sequenceNumber === 0);\n            if (this.sequenceNumber !== 0) {\n                buf.writeBoolean(this.sequenceNumber === 1);\n                if (this.sequenceNumber !== 1) {\n                    buf.writeBits(this.sequenceNumber, 10);\n                }\n            }\n            buf.writeBoolean(this.volume !== 0);\n            if (this.volume !== 0)\n                buf.writeBits(this.volume * 127, 7);\n            buf.writeBoolean(this.soundLevel !== 0);\n            if (this.soundLevel !== 0)\n                buf.writeBits(this.soundLevel, 9);\n            buf.writeBoolean(this.pitch !== 0);\n            if (this.pitch !== 0)\n                buf.writeBits(this.pitch, 8);\n            buf.writeBoolean(this.delay !== 0);\n            if (this.delay !== 0) {\n                this.delay += 0.1;\n                if (this.delay < 0) {\n                    this.delay /= 10;\n                }\n                buf.writeBits(this.delay * 1_000, 13);\n            }\n            buf.writeBoolean(this.origin.x !== 0);\n            if (this.origin.x !== 0) {\n                buf.writeBits(this.origin.x * 8, 12);\n            }\n            buf.writeBoolean(this.origin.y !== 0);\n            if (this.origin.y !== 0) {\n                buf.writeBits(this.origin.y * 8, 12);\n            }\n            buf.writeBoolean(this.origin.z !== 0);\n            if (this.origin.z !== 0) {\n                buf.writeBits(this.origin.z * 8, 12);\n            }\n            buf.writeBoolean(this.speakerEntity !== 0);\n            if (this.speakerEntity !== 0) {\n                buf.writeBits(this.speakerEntity, 12);\n            }\n        }\n    }\n}\n", "/**\n * MIT License\n *\n * Copyright (c) 2020, bit-buffer developers\n * Copyright (c) 2023-2024, NeKz\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * Modified version of: https://github.com/inolen/bit-buffer\n *\n * Changes:\n *      - Converted to TypeScript\n *      - Replaced prototype definitions with class properties, methods, getters\n *        and setters\n *      - Replaced `var` with `const`/`let`\n *      - Removed multiple assignment expressions\n *      - Replaced `function` definitions with ES6 arrow functions\n *      - Inlined a bunch of module scoped functions\n *      - Removed references to NodeJs Buffer\n */\n/**\n * BitView\n *\n * BitView provides a similar interface to the standard\n * DataView, but with support for bit-level reads / writes.\n */\nexport class BitView {\n    constructor(source, byteOffset, byteLength) {\n        Object.defineProperty(this, \"_view\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"bigEndian\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // Used to massage fp values so we can operate on them\n        // at the bit level.\n        Object.defineProperty(this, \"_scratch\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new DataView(new ArrayBuffer(8))\n        });\n        const isBuffer = source instanceof ArrayBuffer;\n        if (!isBuffer) {\n            throw new Error('Must specify a valid ArrayBuffer or Buffer.');\n        }\n        byteOffset = byteOffset || 0;\n        byteLength = byteLength || source.byteLength;\n        this._view = new Uint8Array(source, byteOffset, byteLength);\n        this.bigEndian = false;\n    }\n    get buffer() {\n        return this._view.buffer;\n    }\n    get byteLength() {\n        return this._view.length;\n    }\n    _setBit(offset, on) {\n        if (on) {\n            this._view[offset >> 3] |= 1 << (offset & 7);\n        }\n        else {\n            this._view[offset >> 3] &= ~(1 << (offset & 7));\n        }\n    }\n    getBits(offset, bits, signed) {\n        const available = this._view.length * 8 - offset;\n        if (bits > available) {\n            throw new Error(`Cannot get ${bits} bit(s) from offset ${offset}, ${available} available`);\n        }\n        let value = 0;\n        for (let i = 0; i < bits;) {\n            const remaining = bits - i;\n            const bitOffset = offset & 7;\n            const currentByte = this._view[offset >> 3];\n            // the max number of bits we can read from the current byte\n            const read = Math.min(remaining, 8 - bitOffset);\n            if (this.bigEndian) {\n                // create a mask with the correct bit width\n                const mask = ~(0xff << read);\n                // shift the bits we want to the start of the byte and mask of the rest\n                const readBits = (currentByte >> (8 - read - bitOffset)) & mask;\n                value <<= read;\n                value |= readBits;\n            }\n            else {\n                // create a mask with the correct bit width\n                const mask = ~(0xff << read);\n                // shift the bits we want to the start of the byte and mask off the rest\n                const readBits = (currentByte >> bitOffset) & mask;\n                value |= readBits << i;\n            }\n            offset += read;\n            i += read;\n        }\n        if (signed) {\n            // If we're not working with a full 32 bits, check the\n            // imaginary MSB for this bit count and convert to a\n            // valid 32-bit signed value if set.\n            if (bits !== 32 && value & (1 << (bits - 1))) {\n                value |= -1 ^ ((1 << bits) - 1);\n            }\n            return value;\n        }\n        return value >>> 0;\n    }\n    setBits(offset, value, bits) {\n        const available = this._view.length * 8 - offset;\n        if (bits > available) {\n            throw new Error(`Cannot set ${bits} bit(s) from offset ${offset}, ${available} available`);\n        }\n        for (let i = 0; i < bits;) {\n            const remaining = bits - i;\n            const bitOffset = offset & 7;\n            const byteOffset = offset >> 3;\n            const wrote = Math.min(remaining, 8 - bitOffset);\n            if (this.bigEndian) {\n                // create a mask with the correct bit width\n                const mask = ~(~0 << wrote);\n                // shift the bits we want to the start of the byte and mask of the rest\n                const writeBits = (value >> (bits - i - wrote)) & mask;\n                const destShift = 8 - bitOffset - wrote;\n                // destination mask to zero all the bits we're changing first\n                const destMask = ~(mask << destShift);\n                this._view[byteOffset] = (this._view[byteOffset] & destMask) | (writeBits << destShift);\n            }\n            else {\n                // create a mask with the correct bit width\n                const mask = ~(0xff << wrote);\n                // shift the bits we want to the start of the byte and mask of the rest\n                const writeBits = value & mask;\n                value >>= wrote;\n                // destination mask to zero all the bits we're changing first\n                const destMask = ~(mask << bitOffset);\n                this._view[byteOffset] = (this._view[byteOffset] & destMask) | (writeBits << bitOffset);\n            }\n            offset += wrote;\n            i += wrote;\n        }\n    }\n    getBoolean(offset) {\n        return this.getBits(offset, 1, false) !== 0;\n    }\n    getInt8(offset) {\n        return this.getBits(offset, 8, true);\n    }\n    getUint8(offset) {\n        return this.getBits(offset, 8, false);\n    }\n    getInt16(offset) {\n        return this.getBits(offset, 16, true);\n    }\n    getUint16(offset) {\n        return this.getBits(offset, 16, false);\n    }\n    getInt32(offset) {\n        return this.getBits(offset, 32, true);\n    }\n    getUint32(offset) {\n        return this.getBits(offset, 32, false);\n    }\n    getFloat32(offset) {\n        this._scratch.setUint32(0, this.getUint32(offset));\n        return this._scratch.getFloat32(0);\n    }\n    getFloat64(offset) {\n        this._scratch.setUint32(0, this.getUint32(offset));\n        // DataView offset is in bytes.\n        this._scratch.setUint32(4, this.getUint32(offset + 32));\n        return this._scratch.getFloat64(0);\n    }\n    setBoolean(offset, value) {\n        this.setBits(offset, value ? 1 : 0, 1);\n    }\n    setInt8(offset, value) {\n        this.setBits(offset, value, 8);\n    }\n    setUint8(offset, value) {\n        this.setBits(offset, value, 8);\n    }\n    setInt16(offset, value) {\n        this.setBits(offset, value, 16);\n    }\n    setUint16(offset, value) {\n        this.setBits(offset, value, 16);\n    }\n    setInt32(offset, value) {\n        this.setBits(offset, value, 32);\n    }\n    setUint32(offset, value) {\n        this.setBits(offset, value, 32);\n    }\n    setFloat32(offset, value) {\n        this._scratch.setFloat32(0, value);\n        this.setBits(offset, this._scratch.getUint32(0), 32);\n    }\n    setFloat64(offset, value) {\n        this._scratch.setFloat64(0, value);\n        this.setBits(offset, this._scratch.getUint32(0), 32);\n        this.setBits(offset + 32, this._scratch.getUint32(4), 32);\n    }\n    getArrayBuffer(offset, byteLength) {\n        const buffer = new Uint8Array(byteLength);\n        for (let i = 0; i < byteLength; ++i) {\n            buffer[i] = this.getUint8(offset + i * 8);\n        }\n        return buffer;\n    }\n}\nconst stringToByteArray = (str) => {\n    // https://gist.github.com/volodymyr-mykhailyk/2923227\n    const b = [];\n    for (let i = 0; i < str.length; ++i) {\n        const unicode = str.charCodeAt(i);\n        // 0x00000000 - 0x0000007f -> 0xxxxxxx\n        if (unicode <= 0x7f) {\n            b.push(unicode);\n            // 0x00000080 - 0x000007ff -> 110xxxxx 10xxxxxx\n        }\n        else if (unicode <= 0x7ff) {\n            b.push((unicode >> 6) | 0xc0);\n            b.push((unicode & 0x3f) | 0x80);\n            // 0x00000800 - 0x0000ffff -> 1110xxxx 10xxxxxx 10xxxxxx\n        }\n        else if (unicode <= 0xffff) {\n            b.push((unicode >> 12) | 0xe0);\n            b.push(((unicode >> 6) & 0x3f) | 0x80);\n            b.push((unicode & 0x3f) | 0x80);\n            // 0x00010000 - 0x001fffff -> 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n        }\n        else {\n            b.push((unicode >> 18) | 0xf0);\n            b.push(((unicode >> 12) & 0x3f) | 0x80);\n            b.push(((unicode >> 6) & 0x3f) | 0x80);\n            b.push((unicode & 0x3f) | 0x80);\n        }\n    }\n    return b;\n};\n/**\n * BitStream\n *\n * Small wrapper for a BitView to maintain your position,\n * as well as to handle reading / writing of string data\n * to the underlying buffer.\n */\nexport class BitStream {\n    constructor(source, byteOffset, byteLength) {\n        Object.defineProperty(this, \"_view\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_startIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_length\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"readBoolean\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.reader('getBoolean', 1)\n        });\n        Object.defineProperty(this, \"readInt8\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.reader('getInt8', 8)\n        });\n        Object.defineProperty(this, \"readUint8\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.reader('getUint8', 8)\n        });\n        Object.defineProperty(this, \"readInt16\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.reader('getInt16', 16)\n        });\n        Object.defineProperty(this, \"readUint16\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.reader('getUint16', 16)\n        });\n        Object.defineProperty(this, \"readInt32\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.reader('getInt32', 32)\n        });\n        Object.defineProperty(this, \"readUint32\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.reader('getUint32', 32)\n        });\n        Object.defineProperty(this, \"readFloat32\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.reader('getFloat32', 32)\n        });\n        Object.defineProperty(this, \"readFloat64\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.reader('getFloat64', 64)\n        });\n        Object.defineProperty(this, \"writeBoolean\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.writer('setBoolean', 1)\n        });\n        Object.defineProperty(this, \"writeInt8\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.writer('setInt8', 8)\n        });\n        Object.defineProperty(this, \"writeUint8\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.writer('setUint8', 8)\n        });\n        Object.defineProperty(this, \"writeInt16\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.writer('setInt16', 16)\n        });\n        Object.defineProperty(this, \"writeUint16\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.writer('setUint16', 16)\n        });\n        Object.defineProperty(this, \"writeInt32\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.writer('setInt32', 32)\n        });\n        Object.defineProperty(this, \"writeUint32\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.writer('setUint32', 32)\n        });\n        Object.defineProperty(this, \"writeFloat32\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.writer('setFloat32', 32)\n        });\n        Object.defineProperty(this, \"writeFloat64\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.writer('setFloat64', 64)\n        });\n        const isBuffer = source instanceof ArrayBuffer;\n        if (!(source instanceof BitView) && !isBuffer) {\n            throw new Error('Must specify a valid BitView or ArrayBuffer');\n        }\n        if (isBuffer) {\n            this._view = new BitView(source, byteOffset, byteLength);\n        }\n        else {\n            this._view = source;\n        }\n        this._index = 0;\n        this._startIndex = 0;\n        this._length = this._view.byteLength * 8;\n    }\n    get offset() {\n        return this._index;\n    }\n    get index() {\n        return this._index - this._startIndex;\n    }\n    set index(val) {\n        this._index = val + this._startIndex;\n    }\n    get length() {\n        return this._length - this._startIndex;\n    }\n    set length(val) {\n        this._length = val + this._startIndex;\n    }\n    get bitsLeft() {\n        return this._length - this._index;\n    }\n    // Ceil the returned value, over compensating for the amount of\n    // bits written to the stream.\n    get byteIndex() {\n        return Math.ceil(this._index / 8);\n    }\n    set byteIndex(val) {\n        this._index = val * 8;\n    }\n    get buffer() {\n        return this._view.buffer;\n    }\n    get view() {\n        return this._view;\n    }\n    get bigEndian() {\n        return this._view.bigEndian;\n    }\n    set bigEndian(val) {\n        this._view.bigEndian = val;\n    }\n    reader(name, size) {\n        return () => {\n            if (this._index + size > this._length) {\n                throw new Error('Trying to read past the end of the stream');\n            }\n            const val = this._view[name](this._index);\n            this._index += size;\n            return val;\n        };\n    }\n    writer(name, size) {\n        return (value) => {\n            this._view[name](this._index, value);\n            this._index += size;\n        };\n    }\n    readString(bytes, utf8) {\n        if (bytes === 0) {\n            return '';\n        }\n        let i = 0;\n        const chars = [];\n        let append = true;\n        const fixedLength = !!bytes;\n        if (!bytes) {\n            bytes = Math.floor((this._length - this._index) / 8);\n        }\n        // Read while we still have space available, or until we've\n        // hit the fixed byte length passed in.\n        while (i < bytes) {\n            const c = this.readUint8();\n            // Stop appending chars once we hit 0x00\n            if (c === 0x00) {\n                append = false;\n                // If we don't have a fixed length to read, break out now.\n                if (!fixedLength) {\n                    break;\n                }\n            }\n            if (append) {\n                chars.push(c);\n            }\n            ++i;\n        }\n        const string = String.fromCharCode.apply(null, chars);\n        if (utf8) {\n            try {\n                return decodeURIComponent(escape(string)); // https://stackoverflow.com/a/17192845\n            }\n            catch (_e) {\n                return string;\n            }\n        }\n        else {\n            return string;\n        }\n    }\n    readBits(bits, signed) {\n        const val = this._view.getBits(this._index, bits, signed);\n        this._index += bits;\n        return val;\n    }\n    peakBits(offset, bits, signed) {\n        const val = this._view.getBits(offset, bits, signed);\n        return val;\n    }\n    writeBits(value, bits) {\n        this._view.setBits(this._index, value, bits);\n        this._index += bits;\n    }\n    readASCIIString(bytes) {\n        return this.readString(bytes, false);\n    }\n    readUTF8String(bytes) {\n        return this.readString(bytes, true);\n    }\n    writeASCIIString(string, bytes) {\n        const length = bytes || string.length + 1; // + 1 for NULL\n        for (let i = 0; i < length; ++i) {\n            this.writeUint8(i < string.length ? string.charCodeAt(i) : 0x00);\n        }\n    }\n    writeUTF8String(string, bytes) {\n        const byteArray = stringToByteArray(string);\n        const length = bytes || byteArray.length + 1; // + 1 for NULL\n        for (let i = 0; i < length; ++i) {\n            this.writeUint8(i < byteArray.length ? byteArray[i] : 0x00);\n        }\n    }\n    readBitStream(bitLength) {\n        const slice = new BitStream(this._view);\n        slice._startIndex = this._index;\n        slice._index = this._index;\n        slice.length = bitLength;\n        this._index += bitLength;\n        return slice;\n    }\n    writeBitStream(stream, length) {\n        if (!length) {\n            length = stream.bitsLeft;\n        }\n        let bitsToWrite = 0;\n        while (length > 0) {\n            bitsToWrite = Math.min(length, 32);\n            this.writeBits(stream.readBits(bitsToWrite, false), bitsToWrite);\n            length -= bitsToWrite;\n        }\n    }\n    readArrayBuffer(byteLength) {\n        const buffer = this._view.getArrayBuffer(this._index, byteLength);\n        this._index += byteLength * 8;\n        return buffer;\n    }\n    writeArrayBuffer(buffer, byteLength) {\n        this.writeBitStream(new BitStream(buffer), byteLength * 8);\n    }\n}\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nexport class QAngle {\n    constructor(pitch, yaw, roll) {\n        Object.defineProperty(this, \"pitch\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"yaw\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"roll\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.pitch = pitch;\n        this.yaw = yaw;\n        this.roll = roll;\n    }\n    *[Symbol.iterator]() {\n        yield this.pitch;\n        yield this.yaw;\n        yield this.roll;\n    }\n}\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nexport class Vector {\n    constructor(x, y, z) {\n        Object.defineProperty(this, \"x\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"y\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"z\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n    length2D() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    *[Symbol.iterator]() {\n        yield this.x;\n        yield this.y;\n        yield this.z;\n    }\n}\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nimport { BitStream } from './lib/bit-buffer.js';\nimport { QAngle } from './types/QAngle.js';\nimport { Vector } from './types/Vector.js';\nexport class SourceDemoBuffer extends BitStream {\n    constructor(source, byteOffset, byteLength) {\n        super(source, byteOffset, byteLength);\n    }\n    static from(buffer) {\n        const copy = new SourceDemoBuffer(buffer.view);\n        copy._index = buffer._index;\n        copy._startIndex = buffer._startIndex;\n        copy._length = buffer._length;\n        return copy;\n    }\n    static allocate(bytes) {\n        return new SourceDemoBuffer(new ArrayBuffer(bytes));\n    }\n    static allocateBits(bits) {\n        if ((bits % 8) !== 0) {\n            throw new Error('Number of bits to allocate is not aligned!');\n        }\n        return new SourceDemoBuffer(new ArrayBuffer(bits / 8));\n    }\n    clone() {\n        return new SourceDemoBuffer(this.view);\n    }\n    reset() {\n        this._index = this._startIndex;\n        return this;\n    }\n    readVarInt32() {\n        let result = 0;\n        let count = 0;\n        let b;\n        do {\n            if (count == 5)\n                return result;\n            b = this.readUint8();\n            result |= (b & 0x7F) << (7 * count);\n            ++count;\n        } while (b & 0x80);\n        return result;\n    }\n    readVector() {\n        return new Vector(this.readFloat32(), this.readFloat32(), this.readFloat32());\n    }\n    writeVector(vec) {\n        this.writeFloat32(vec.x);\n        this.writeFloat32(vec.y);\n        this.writeFloat32(vec.z);\n    }\n    readQAngle() {\n        return new QAngle(this.readFloat32(), this.readFloat32(), this.readFloat32());\n    }\n    writeQAngle(ang) {\n        this.writeFloat32(ang.pitch);\n        this.writeFloat32(ang.yaw);\n        this.writeFloat32(ang.roll);\n    }\n    readCoord() {\n        const COORD_INTEGER_BITS = 14;\n        const COORD_FRACTIONAL_BITS = 5;\n        const COORD_DENOMINATOR = 1 << COORD_FRACTIONAL_BITS;\n        const COORD_RESOLUTION = 1.0 / COORD_DENOMINATOR;\n        let value = 0.0;\n        let integer = this.readBits(1);\n        let fraction = this.readBits(1);\n        if (integer || fraction) {\n            const sign = this.readBits(1);\n            if (integer) {\n                integer = this.readBits(COORD_INTEGER_BITS) + 1;\n            }\n            if (fraction) {\n                fraction = this.readBits(COORD_FRACTIONAL_BITS);\n            }\n            value = integer + fraction * COORD_RESOLUTION;\n            if (sign)\n                value = -value;\n        }\n        return value;\n    }\n    writeCoord(value) {\n        const COORD_INTEGER_BITS = 14;\n        const COORD_FRACTIONAL_BITS = 5;\n        const COORD_DENOMINATOR = 1 << COORD_FRACTIONAL_BITS;\n        const COORD_RESOLUTION = 1.0 / COORD_DENOMINATOR;\n        const sign = value <= -COORD_RESOLUTION ? 1 : 0;\n        let integer = Math.floor(Math.abs(value));\n        const fraction = Math.abs(Math.floor(value * COORD_DENOMINATOR)) & (COORD_DENOMINATOR - 1);\n        this.writeBits(integer, 1);\n        this.writeBits(fraction, 1);\n        if (integer || fraction) {\n            this.writeBits(sign, 1);\n            if (integer) {\n                --integer;\n                this.writeBits(integer, COORD_INTEGER_BITS);\n            }\n            if (fraction) {\n                this.writeBits(fraction, COORD_FRACTIONAL_BITS);\n            }\n        }\n    }\n    readVectorCoord() {\n        const [x, y, z] = [\n            this.readBoolean(),\n            this.readBoolean(),\n            this.readBoolean(),\n        ];\n        return new Vector(x ? this.readCoord() : 0, y ? this.readCoord() : 0, z ? this.readCoord() : 0);\n    }\n    writeVectorCoord(vec) {\n        const COORD_FRACTIONAL_BITS = 5;\n        const COORD_DENOMINATOR = 1 << COORD_FRACTIONAL_BITS;\n        const COORD_RESOLUTION = 1.0 / COORD_DENOMINATOR;\n        const [x, y, z] = [\n            vec.x >= COORD_RESOLUTION || vec.x <= -COORD_RESOLUTION,\n            vec.y >= COORD_RESOLUTION || vec.y <= -COORD_RESOLUTION,\n            vec.z >= COORD_RESOLUTION || vec.z <= -COORD_RESOLUTION,\n        ];\n        this.writeBoolean(x);\n        this.writeBoolean(y);\n        this.writeBoolean(z);\n        x && this.writeCoord(vec.x);\n        y && this.writeCoord(vec.y);\n        z && this.writeCoord(vec.z);\n    }\n    readAngles() {\n        const { x, y, z } = this.readVectorCoord();\n        return new QAngle(x, y, z);\n    }\n    writeAngles(angle) {\n        return this.writeVectorCoord(new Vector(angle.pitch, angle.yaw, angle.roll));\n    }\n    readField(bits, fallbackValue = 0) {\n        return this.readBoolean() ? this.readBits(bits) : fallbackValue;\n    }\n    writeField(field, bits, fallbackValue = 0) {\n        this.writeBoolean(field !== fallbackValue);\n        if (field !== fallbackValue) {\n            this.writeBits(field, bits);\n        }\n    }\n    readFieldThen(bits, fallbackValue, callback) {\n        return this.readBoolean() ? callback(this.readBits(bits)) : fallbackValue;\n    }\n    writeFieldThen(field, bits, fallbackValue, callback) {\n        this.writeBoolean(field !== fallbackValue);\n        if (field !== fallbackValue) {\n            this.writeBits(field, bits);\n            callback(field);\n        }\n    }\n    readBitStream(bitLength) {\n        const slice = new SourceDemoBuffer(this._view);\n        slice._startIndex = this._index;\n        slice._index = this._index;\n        slice.length = bitLength;\n        this._index += bitLength;\n        return slice;\n    }\n    writeBitStream(stream, length) {\n        if (!length) {\n            length = stream.bitsLeft;\n        }\n        let bitsToWrite = 0;\n        let offset = stream.offset;\n        while (length > 0) {\n            bitsToWrite = Math.min(length, 32);\n            this.writeBits(stream.peakBits(offset, bitsToWrite, false), bitsToWrite);\n            offset += bitsToWrite;\n            length -= bitsToWrite;\n        }\n    }\n    writeArrayBuffer(buffer, byteLength) {\n        this.writeBitStream(new SourceDemoBuffer(buffer), byteLength * 8);\n    }\n}\n", "// Copyright (c) 2023-2024, NeKz\n// SPDX-License-Identifier: MIT\nexport class UserMessage {\n    constructor(type) {\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.type = type;\n    }\n    getType() {\n        return this.type;\n    }\n    getName() {\n        return this.constructor.name;\n    }\n    read(_buf, _demo) {\n        throw new Error(`read() for ${this.constructor.name} not implemented!`);\n    }\n    write(_buf, _demo) {\n        throw new Error(`write() for ${this.constructor.name} not implemented!`);\n    }\n    as() {\n        return this;\n    }\n}\nexport class Geiger extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"geigerRange\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.geigerRange = buf.readUint8();\n    }\n    write(buf) {\n        buf.writeUint8(this.geigerRange);\n    }\n}\nexport class Train extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"pos\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.pos = buf.readUint8();\n    }\n    write(buf) {\n        buf.writeUint8(this.pos);\n    }\n}\nexport class HudText extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.text = buf.readASCIIString();\n    }\n    write(buf) {\n        buf.writeASCIIString(this.text);\n    }\n}\nexport class SayText extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"wantsToChat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.client = buf.readUint8();\n        this.text = buf.readASCIIString();\n        this.wantsToChat = buf.readUint8();\n    }\n    write(buf) {\n        buf.writeUint8(this.client);\n        buf.writeASCIIString(this.text);\n        buf.writeUint8(this.wantsToChat);\n    }\n}\nexport class SayText2 extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"wantsToChat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"messageText\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"messages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.client = buf.readUint8();\n        this.text = buf.readASCIIString();\n        this.wantsToChat = buf.readUint8();\n        this.messageText = buf.readASCIIString();\n        this.messages = [\n            buf.readASCIIString(),\n            buf.readASCIIString(),\n            buf.readASCIIString(),\n            buf.readASCIIString(),\n        ];\n    }\n    write(buf) {\n        buf.writeUint8(this.client);\n        buf.writeASCIIString(this.text);\n        buf.writeUint8(this.wantsToChat);\n        buf.writeASCIIString(this.messageText);\n        for (const message of this.messages.values()) {\n            buf.writeASCIIString(message);\n        }\n    }\n}\nexport var HudPrint;\n(function (HudPrint) {\n    HudPrint[HudPrint[\"Notify\"] = 1] = \"Notify\";\n    HudPrint[HudPrint[\"Console\"] = 2] = \"Console\";\n    HudPrint[HudPrint[\"Talk\"] = 3] = \"Talk\";\n    HudPrint[HudPrint[\"Center\"] = 4] = \"Center\";\n})(HudPrint || (HudPrint = {}));\nexport class TextMsg extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"msgDest\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.msgDest = buf.readUint8();\n        this.output = ['', '', '', '', ''];\n        for (let i = 0; i < 5; ++i) {\n            this.output[i] = buf.readASCIIString();\n        }\n    }\n    write(buf) {\n        buf.writeUint8(this.msgDest);\n        for (const str of this.output.values() ?? []) {\n            buf.writeASCIIString(str);\n        }\n    }\n}\nexport class HudMsg extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"textParms\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"message\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.textParms = {\n            channel: buf.readUint8(),\n            x: buf.readFloat32(),\n            y: buf.readFloat32(),\n            r1: buf.readUint8(),\n            g1: buf.readUint8(),\n            b1: buf.readUint8(),\n            a1: buf.readUint8(),\n            r2: buf.readUint8(),\n            g2: buf.readUint8(),\n            b2: buf.readUint8(),\n            a2: buf.readUint8(),\n            effect: buf.readFloat32(),\n            fadeinTime: buf.readFloat32(),\n            fadeoutTime: buf.readFloat32(),\n            holdTime: buf.readFloat32(),\n            fxTime: buf.readFloat32(),\n        };\n        this.message = buf.readASCIIString();\n    }\n    write(buf) {\n        buf.writeUint8(this.textParms.channel);\n        buf.writeFloat32(this.textParms.x);\n        buf.writeFloat32(this.textParms.y);\n        buf.writeUint8(this.textParms.r1);\n        buf.writeUint8(this.textParms.g1);\n        buf.writeUint8(this.textParms.b1);\n        buf.writeUint8(this.textParms.a1);\n        buf.writeUint8(this.textParms.r2);\n        buf.writeUint8(this.textParms.g2);\n        buf.writeUint8(this.textParms.b2);\n        buf.writeUint8(this.textParms.a2);\n        buf.writeFloat32(this.textParms.effect);\n        buf.writeFloat32(this.textParms.fadeinTime);\n        buf.writeFloat32(this.textParms.fadeoutTime);\n        buf.writeFloat32(this.textParms.holdTime);\n        buf.writeFloat32(this.textParms.fxTime);\n        buf.writeASCIIString(this.message);\n    }\n}\nexport class ResetHUD extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"reset\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.reset = buf.readUint8();\n    }\n    write(buf) {\n        buf.writeUint8(this.reset);\n    }\n}\nexport class GameTitle extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\nexport class ItemPickup extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.name = buf.readASCIIString();\n    }\n    write(buf) {\n        buf.writeASCIIString(this.name);\n    }\n}\n// NOTE: Unused\nexport class ShowMenu extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\nexport var ShakeCommand;\n(function (ShakeCommand) {\n    ShakeCommand[ShakeCommand[\"Start\"] = 0] = \"Start\";\n    ShakeCommand[ShakeCommand[\"Stop\"] = 1] = \"Stop\";\n    ShakeCommand[ShakeCommand[\"Amplitude\"] = 2] = \"Amplitude\";\n    ShakeCommand[ShakeCommand[\"Frequency\"] = 3] = \"Frequency\";\n    ShakeCommand[ShakeCommand[\"StartRumbleOnly\"] = 4] = \"StartRumbleOnly\";\n    ShakeCommand[ShakeCommand[\"StartNoRumble\"] = 5] = \"StartNoRumble\";\n})(ShakeCommand || (ShakeCommand = {}));\nexport class Shake extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"command\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"amplitude\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"frequency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"duration\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.command = buf.readUint8();\n        this.amplitude = buf.readFloat32();\n        this.frequency = buf.readFloat32();\n        this.duration = buf.readFloat32();\n    }\n    write(buf) {\n        buf.writeUint8(this.command);\n        buf.writeFloat32(this.amplitude);\n        buf.writeFloat32(this.frequency);\n        buf.writeFloat32(this.duration);\n    }\n}\nexport class Tilt extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"command\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"easeInOut\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"angle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"duration\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.command = buf.readUint8();\n        this.easeInOut = buf.readUint8();\n        this.angle = buf.readQAngle();\n        this.duration = buf.readFloat32();\n        this.time = buf.readFloat32();\n    }\n    write(buf) {\n        buf.writeUint8(this.command);\n        buf.writeUint8(this.easeInOut);\n        buf.writeQAngle(this.angle);\n        buf.writeFloat32(this.duration);\n        buf.writeFloat32(this.time);\n    }\n}\nexport class Fade extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"duration\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"holdTime\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fadeFlags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fade\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.duration = buf.readUint16();\n        this.holdTime = buf.readUint16();\n        this.fadeFlags = buf.readUint16();\n        this.fade = {\n            r: buf.readUint8(),\n            g: buf.readUint8(),\n            b: buf.readUint8(),\n            a: buf.readUint8(),\n        };\n    }\n    write(buf) {\n        buf.writeUint16(this.duration);\n        buf.writeUint16(this.holdTime);\n        buf.writeUint16(this.fadeFlags);\n        buf.writeUint8(this.fade.r);\n        buf.writeUint8(this.fade.g);\n        buf.writeUint8(this.fade.b);\n        buf.writeUint8(this.fade.a);\n    }\n}\nexport class VGUIMenu extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"show\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"size\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"keyValues\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.name = buf.readASCIIString();\n        this.show = buf.readUint8();\n        this.size = buf.readUint8();\n        this.keyValues = [];\n        for (let i = 0; i < this.size; ++i) {\n            this.keyValues.push({\n                key: buf.readASCIIString(),\n                value: buf.readASCIIString(),\n            });\n        }\n    }\n    write(buf) {\n        buf.writeASCIIString(this.name);\n        buf.writeUint8(this.show);\n        buf.writeUint8(this.size);\n        this.keyValues.forEach(({ key, value }) => {\n            buf.writeASCIIString(key);\n            buf.writeASCIIString(value);\n        });\n    }\n}\nexport class Rumble extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.index = buf.readUint8();\n        this.data = buf.readUint8();\n        this.flags = buf.readUint8();\n    }\n    write(buf) {\n        buf.writeUint8(this.index);\n        buf.writeUint8(this.data);\n        buf.writeUint8(this.flags);\n    }\n}\nexport class Battery extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"battery\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.battery = buf.readUint16();\n    }\n    write(buf) {\n        buf.writeUint16(this.battery);\n    }\n}\n// NOTE: Unused\nexport class Damage extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\nexport class VoiceMask extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"audiblePlayers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serverBannedPlayers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serverModEnabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        const VOICE_MAX_PLAYERS_DW = 2;\n        this.audiblePlayers = [0, 0];\n        this.serverBannedPlayers = [0, 0];\n        for (let index = 0; index < VOICE_MAX_PLAYERS_DW; ++index) {\n            this.audiblePlayers[index] = buf.readUint32();\n            this.serverBannedPlayers[index] = buf.readUint32();\n        }\n        this.serverModEnabled = buf.readUint8();\n    }\n    write(buf) {\n        const VOICE_MAX_PLAYERS_DW = 2;\n        for (let index = 0; index < VOICE_MAX_PLAYERS_DW; ++index) {\n            buf.writeUint32(this.audiblePlayers[index]);\n            buf.writeUint32(this.serverBannedPlayers[index]);\n        }\n        buf.writeUint8(this.serverModEnabled);\n    }\n}\nexport class RequestState extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\nexport class CloseCaption extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"hash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"duration\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fromPlayer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.hash = buf.readUint32();\n        this.duration = buf.readBits(15, false);\n        this.fromPlayer = buf.readBoolean();\n    }\n    write(buf) {\n        buf.writeUint32(this.hash);\n        buf.writeBits(this.duration, 15);\n        buf.writeBoolean(this.fromPlayer);\n    }\n}\nexport class CloseCaptionDirect extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"hash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"duration\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fromPlayer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.hash = buf.readUint32();\n        this.duration = buf.readBits(15, false);\n        this.fromPlayer = buf.readBoolean();\n    }\n    write(buf) {\n        buf.writeUint32(this.hash);\n        buf.writeBits(this.duration, 15);\n        buf.writeBoolean(this.fromPlayer);\n    }\n}\nexport class HintText extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"hintString\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.hintString = buf.readASCIIString();\n    }\n    write(buf) {\n        buf.writeASCIIString(this.hintString);\n    }\n}\nexport class KeyHintText extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"messages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"message\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.messages = buf.readUint8();\n        this.message = buf.readASCIIString();\n    }\n    write(buf) {\n        buf.writeUint8(this.messages);\n        buf.writeASCIIString(this.message);\n    }\n}\n// NOTE: Unused\nexport class SquadMemberDied extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\n// NOTE: Unused\nexport class AmmoDenied extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"ammo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(_buf) {\n        // this.ammo = buf.readUint16();\n    }\n    write(_buf) {\n        // buf.writeUint16(this.ammo);\n    }\n}\nexport var CreditsType;\n(function (CreditsType) {\n    CreditsType[CreditsType[\"Logo\"] = 1] = \"Logo\";\n    CreditsType[CreditsType[\"Intro\"] = 2] = \"Intro\";\n    CreditsType[CreditsType[\"Outro\"] = 3] = \"Outro\";\n})(CreditsType || (CreditsType = {}));\nexport class CreditsMsg extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"creditsType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.creditsType = buf.readUint8();\n    }\n    write(buf) {\n        buf.writeUint8(this.creditsType);\n    }\n}\nexport class LogoTimeMsg extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.time = buf.readFloat32();\n    }\n    write(buf) {\n        buf.writeFloat32(this.time);\n    }\n}\n// NOTE: Unused\nexport class AchievementEvent extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"achievementId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(_buf) {\n        // this.achievementId = buf.readUint16();\n    }\n    write(_buf) {\n        // buf.writeUint16(this.achievementId);\n    }\n}\nexport class UpdateJalopyRadar extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\nexport class CurrentTimescale extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\nexport var GameTimescaleInterpolators;\n(function (GameTimescaleInterpolators) {\n    GameTimescaleInterpolators[GameTimescaleInterpolators[\"Linear\"] = 0] = \"Linear\";\n    GameTimescaleInterpolators[GameTimescaleInterpolators[\"Accel\"] = 1] = \"Accel\";\n    GameTimescaleInterpolators[GameTimescaleInterpolators[\"DeAccel\"] = 2] = \"DeAccel\";\n    GameTimescaleInterpolators[GameTimescaleInterpolators[\"EaseInOut\"] = 3] = \"EaseInOut\";\n})(GameTimescaleInterpolators || (GameTimescaleInterpolators = {}));\nexport class DesiredTimescale extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"desiredTimescale\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"durationRealTimeSeconds\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"interpolationType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"startBlendTime\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.desiredTimescale = buf.readFloat32();\n        this.durationRealTimeSeconds = buf.readFloat32();\n        this.interpolationType = buf.readUint8();\n        this.startBlendTime = buf.readFloat32();\n    }\n    write(buf) {\n        buf.writeFloat32(this.desiredTimescale);\n        buf.writeFloat32(this.durationRealTimeSeconds);\n        buf.writeUint8(this.interpolationType);\n        buf.writeFloat32(this.startBlendTime);\n    }\n}\nexport var PortalCreditsType;\n(function (PortalCreditsType) {\n    PortalCreditsType[PortalCreditsType[\"Logo\"] = 1] = \"Logo\";\n    PortalCreditsType[PortalCreditsType[\"Intro\"] = 2] = \"Intro\";\n    PortalCreditsType[PortalCreditsType[\"Outro\"] = 3] = \"Outro\";\n    PortalCreditsType[PortalCreditsType[\"OutroPortal\"] = 4] = \"OutroPortal\";\n})(PortalCreditsType || (PortalCreditsType = {}));\nexport class CreditsPortalMsg extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"creditsType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.creditsType = buf.readUint8();\n    }\n    write(buf) {\n        buf.writeUint8(this.creditsType);\n    }\n}\n// NOTE: Unused\nexport class InventoryFlash extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\n// NOTE: Unused\nexport class IndicatorFlash extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\n// NOTE: Unused\nexport class ControlHelperAnimate extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\n// NOTE: Unused\nexport class TakePhoto extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\n// NOTE: Unused\nexport class Flash extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\nexport class HudPingIndicator extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"position\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.position = buf.readVector();\n    }\n    write(buf) {\n        buf.writeVector(this.position);\n    }\n}\n// NOTE: Unused\nexport class OpenRadialMenu extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\n// TODO\nexport class AddLocator extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"playerIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"entityHandle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"displayTime\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"position\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"normal\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"iconName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(_buf) {\n        // this.playerIndex = buf.readUint16();\n        // this.entityHandle = buf.readUint32();\n        // this.displayTime = buf.readFloat32();\n        // this.position = buf.readVectorCoord();\n        // this.normal = buf.readVector();\n        // this.iconName = buf.readASCIIString();\n    }\n    write(_buf) {\n        // buf.writeUint16(this.playerIndex!);\n        // buf.writeUint32(this.entityHandle!);\n        // buf.writeFloat32(this.displayTime!);\n        // buf.writeVectorCoord(this.position!);\n        // buf.writeVector(this.normal!);\n        // buf.writeASCIIString(this.iconName!);\n    }\n}\nexport class MPMapCompleted extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"branch\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"level\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.branch = buf.readUint8();\n        this.level = buf.readUint8();\n    }\n    write(buf) {\n        buf.writeUint8(this.branch);\n        buf.writeUint8(this.level);\n    }\n}\nexport class MPMapIncomplete extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"branch\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"level\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.branch = buf.readUint8();\n        this.level = buf.readUint8();\n    }\n    write(buf) {\n        buf.writeUint8(this.branch);\n        buf.writeUint8(this.level);\n    }\n}\n// TODO\nexport class MPMapCompletedData extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"levelCompletions\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(_buf) {\n        // const MAX_PORTAL2_COOP_BRANCHES = 6;\n        // const MAX_PORTAL2_COOP_LEVELS_PER_BRANCH = 16;\n        // const numBits = 2 * MAX_PORTAL2_COOP_BRANCHES * MAX_PORTAL2_COOP_LEVELS_PER_BRANCH;\n        // const buffer = buf.readArrayBuffer(numBits / 8);\n        // let current = 0;\n        // let mask = 0x01;\n        // this.levelCompletions = [];\n        // for (let player = 0; player < 2; ++player) {\n        //     this.levelCompletions[player] = [];\n        //     for (let branch = 0; branch < MAX_PORTAL2_COOP_BRANCHES; ++branch) {\n        //         this.levelCompletions[player]![branch] = [];\n        //         for (let level = 0; level < MAX_PORTAL2_COOP_LEVELS_PER_BRANCH; ++level) {\n        //             if ((buffer.at(current)! & mask) !== 0) {\n        //                 this.levelCompletions![player]![branch]![level] = true;\n        //             }\n        //             mask <<= 1;\n        //             if (mask > 0x100) {\n        //                 ++current;\n        //                 mask = 0x01;\n        //             }\n        //         }\n        //     }\n        // }\n    }\n    write(_buf) {\n        // const MAX_PORTAL2_COOP_BRANCHES = 6;\n        // const MAX_PORTAL2_COOP_LEVELS_PER_BRANCH = 16;\n        // const numBits = 2 * MAX_PORTAL2_COOP_BRANCHES * MAX_PORTAL2_COOP_LEVELS_PER_BRANCH;\n        // const buffer = new Uint8Array(8 + numBits / 8);\n        // let current = 0;\n        // let mask = 0x01;\n        // this.levelCompletions = [];\n        // for (let player = 0; player < 2; ++player) {\n        //     this.levelCompletions[player] = [];\n        //     for (let branch = 0; branch < MAX_PORTAL2_COOP_BRANCHES; ++branch) {\n        //         this.levelCompletions[player]![branch] = [];\n        //         for (let level = 0; level < MAX_PORTAL2_COOP_LEVELS_PER_BRANCH; ++level) {\n        //             const completed = this.levelCompletions![player]![branch]![level];\n        //             buffer.set(new Uint8Array([completed ? mask : 0x00]), current);\n        //             mask <<= 1;\n        //             if (mask > 0x100) {\n        //                 ++current;\n        //                 mask = 0x01;\n        //             }\n        //         }\n        //     }\n        // }\n        // buf.writeArrayBuffer(buffer, buffer.byteLength);\n    }\n}\nexport class MPTauntEarned extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"taunt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"awardSilently\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.taunt = buf.readASCIIString();\n        this.awardSilently = buf.readBoolean();\n    }\n    write(buf) {\n        buf.writeASCIIString(this.taunt);\n        buf.writeBoolean(this.awardSilently);\n    }\n}\nexport class MPTauntUnlocked extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"taunt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.taunt = buf.readASCIIString();\n    }\n    write(buf) {\n        buf.writeASCIIString(this.taunt);\n    }\n}\nexport class MPTauntLocked extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"taunt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.taunt = buf.readASCIIString();\n    }\n    write(buf) {\n        buf.writeASCIIString(this.taunt);\n    }\n}\nexport class MPAllTauntsLocked extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\nexport var PortalFizzleType;\n(function (PortalFizzleType) {\n    PortalFizzleType[PortalFizzleType[\"Success\"] = 0] = \"Success\";\n    PortalFizzleType[PortalFizzleType[\"CantFit\"] = 1] = \"CantFit\";\n    PortalFizzleType[PortalFizzleType[\"OverlappedLinked\"] = 2] = \"OverlappedLinked\";\n    PortalFizzleType[PortalFizzleType[\"BadVolume\"] = 3] = \"BadVolume\";\n    PortalFizzleType[PortalFizzleType[\"BadSurface\"] = 4] = \"BadSurface\";\n    PortalFizzleType[PortalFizzleType[\"Killed\"] = 5] = \"Killed\";\n    PortalFizzleType[PortalFizzleType[\"Cleanser\"] = 6] = \"Cleanser\";\n    PortalFizzleType[PortalFizzleType[\"Close\"] = 7] = \"Close\";\n    PortalFizzleType[PortalFizzleType[\"NearBlue\"] = 8] = \"NearBlue\";\n    PortalFizzleType[PortalFizzleType[\"NearRed\"] = 9] = \"NearRed\";\n    PortalFizzleType[PortalFizzleType[\"None\"] = 10] = \"None\";\n})(PortalFizzleType || (PortalFizzleType = {}));\n// TODO: vector coord is incorrect :>\nexport class PortalFX_Surface extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"entIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"playerEntIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"team\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"portalNum\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"effect\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"vecOrigin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"angles\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(_buf) {\n        // this.entIndex = buf.readInt16();\n        // this.playerEntIndex = buf.readInt16();\n        // this.team = buf.readInt8();\n        // this.portalNum = buf.readInt8();\n        // this.effect = buf.readInt8();\n        // this.vecOrigin = buf.readVectorCoord();\n        // this.angles = buf.readAngles();\n    }\n    write(_buf) {\n        // buf.writeInt16(this.entIndex!);\n        // buf.writeInt16(this.playerEntIndex!);\n        // buf.writeInt8(this.team!);\n        // buf.writeInt8(this.portalNum!);\n        // buf.writeInt8(this.effect!);\n        // buf.writeVectorCoord(this.vecOrigin!);\n        // buf.writeAngles(this.angles!);\n    }\n}\n// TODO\nexport class PaintWorld extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"unk1\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unk2\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unk3\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unk4\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unk5\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(_buf) {\n        // this.unk1 = buf.readUint8();\n        // this.unk2 = buf.readUint32();\n        // this.unk3 = buf.readFloat32();\n        // this.unk4 = buf.readFloat32();\n        // this.unk5 = buf.readUint8();\n    }\n    write(_buf) {\n        // buf.writeUint8(this.unk1!);\n        // buf.writeUint32(this.unk2!);\n        // buf.writeFloat32(this.unk3!);\n        // buf.writeFloat32(this.unk4!);\n        // buf.writeUint8(this.unk5!);\n    }\n}\n// TODO\nexport class PaintEntity extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"unk1\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unk2\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unk3\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unk4\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unk5\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(_buf) {\n        // this.unk1 = buf.readUint32();\n        // this.unk2 = buf.readUint8();\n        // this.unk3 = buf.readFloat32();\n        // this.unk4 = buf.readFloat32();\n        // this.unk5 = buf.readFloat32();\n    }\n    write(_buf) {\n        // buf.writeUint32(this.unk1!);\n        // buf.writeUint8(this.unk2!);\n        // buf.writeFloat32(this.unk3!);\n        // buf.writeFloat32(this.unk4!);\n        // buf.writeFloat32(this.unk5!);\n    }\n}\n// TODO\nexport class ChangePaintColor extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"unk1\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"unk2\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(_buf) {\n        // this.unk1 = buf.readUint32();\n        // this.unk2 = buf.readUint8();\n    }\n    write(_buf) {\n        // buf.writeUint32(this.unk1!);\n        // buf.writeUint8(this.unk2!);\n    }\n}\n// NOTE: Unused\nexport class PaintBombExplode extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\nexport class RemoveAllPaint extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\n// NOTE: Unused\nexport class PaintAllSurfaces extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\nexport class RemovePaint extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\n// NOTE: Unused\nexport class StartSurvey extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"handle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.handle = buf.readUint32();\n    }\n    write(buf) {\n        buf.writeUint32(this.handle);\n    }\n}\n// TODO\nexport class ApplyHitBoxDamageEffect extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"entityHandle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"effectIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"hits\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(_buf) {\n        // this.entityHandle = buf.readUint32();\n        // this.effectIndex = buf.readUint8();\n        // this.hits = buf.readUint8();\n    }\n    write(_buf) {\n        // buf.writeUint32(this.entityHandle!);\n        // buf.writeUint8(this.effectIndex!);\n        // buf.writeUint8(this.hits!);\n    }\n}\nexport class SetMixLayerTriggerFactor extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"layer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"group\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"factor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.layer = buf.readASCIIString();\n        this.group = buf.readASCIIString();\n        this.factor = buf.readFloat32();\n    }\n    write(buf) {\n        buf.writeASCIIString(this.layer);\n        buf.writeASCIIString(this.group);\n        buf.writeFloat32(this.factor);\n    }\n}\nexport class TransitionFade extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"fade\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.fade = buf.readFloat32();\n    }\n    write(buf) {\n        buf.writeFloat32(this.fade);\n    }\n}\nexport class ScoreboardTempUpdate extends UserMessage {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"portalScore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeScore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.portalScore = buf.readUint32();\n        this.timeScore = buf.readUint32();\n    }\n    write(buf) {\n        buf.writeUint32(this.portalScore);\n        buf.writeUint32(this.timeScore);\n    }\n}\nexport class ChallengeModeCheatSession extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\nexport class ChallengeModeCloseAllUI extends UserMessage {\n    read(_buf) { }\n    write(_buf) { }\n}\nexport const UserMessages = {\n    Portal2Engine: [\n        Geiger, // 0\n        Train, // 1\n        HudText, // 2\n        SayText, // 3\n        SayText2, // 4\n        TextMsg, // 5\n        HudMsg, // 6\n        ResetHUD, // 7\n        GameTitle, // 8\n        ItemPickup, // 9\n        ShowMenu, // 10\n        Shake, // 11\n        Tilt, // 12\n        Fade, // 13\n        VGUIMenu, // 14\n        Rumble, // 15\n        Battery, // 16\n        Damage, // 17\n        VoiceMask, // 18\n        RequestState, // 19\n        CloseCaption, // 20\n        CloseCaptionDirect, // 21\n        HintText, // 22\n        KeyHintText, // 23\n        SquadMemberDied, // 24\n        AmmoDenied, // 25\n        CreditsMsg, // 26\n        LogoTimeMsg, // 27\n        AchievementEvent, // 28\n        UpdateJalopyRadar, // 29\n        CurrentTimescale, // 30\n        DesiredTimescale, // 31\n        CreditsPortalMsg, // 32\n        InventoryFlash, // 33\n        IndicatorFlash, // 34\n        ControlHelperAnimate, // 35\n        TakePhoto, // 36\n        Flash, // 37\n        HudPingIndicator, // 38\n        OpenRadialMenu, // 39\n        AddLocator, // 40\n        MPMapCompleted, // 41\n        MPMapIncomplete, // 42\n        MPMapCompletedData, // 43\n        MPTauntEarned, // 44\n        MPTauntUnlocked, // 45\n        MPTauntLocked, // 46\n        MPAllTauntsLocked, // 47\n        PortalFX_Surface, // 48\n        PaintWorld, // 49\n        PaintEntity, // 50\n        ChangePaintColor, // 51\n        PaintBombExplode, // 52\n        RemoveAllPaint, // 53\n        PaintAllSurfaces, // 54\n        RemovePaint, // 55\n        StartSurvey, // 56\n        ApplyHitBoxDamageEffect, // 57\n        SetMixLayerTriggerFactor, // 58\n        TransitionFade, // 59\n        ScoreboardTempUpdate, // 60\n        ChallengeModeCheatSession, // 61\n        ChallengeModeCloseAllUI, // 62\n        // not registered:\n        //      VoiceSubtitle { client: i8, menu: i8, item: i8 }\n        //      StatsCrawlMsg {}\n        //      creditsMsg {}\n        //      MPVSGameOver { unk: i8 }\n        //      MPVSRoundEnd { unk: i8 }\n        //      MPVSGameStart { unk: i8 }\n    ],\n};\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nimport { SourceDemoBuffer } from '../buffer.js';\nexport class StringTable {\n    constructor() {\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"entries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"classes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf, demo) {\n        this.name = buf.readASCIIString();\n        this.entries = [];\n        this.classes = [];\n        const EntryType = StringTableEntryTypes[this.name];\n        let entries = buf.readInt16();\n        while (entries--) {\n            const entryName = buf.readASCIIString();\n            const entry = new StringTableEntry(entryName);\n            if (buf.readBoolean()) {\n                entry.read(buf, EntryType, demo);\n            }\n            this.entries.push(entry);\n        }\n        if (buf.readBoolean()) {\n            let entries = buf.readInt16();\n            while (entries--) {\n                const entryName = buf.readASCIIString();\n                const entry = new StringTableClass(entryName);\n                if (buf.readBoolean()) {\n                    entry.read(buf);\n                }\n                this.classes.push(entry);\n            }\n        }\n    }\n    write(buf, demo) {\n        buf.writeASCIIString(this.name);\n        buf.writeInt16(this.entries.length);\n        this.entries.forEach((entry) => {\n            buf.writeASCIIString(entry.name);\n            buf.writeBoolean(entry.dataBuffer !== undefined);\n            if (entry.dataBuffer !== undefined) {\n                entry.write(buf, demo);\n            }\n        });\n        buf.writeBoolean(this.classes.length !== 0);\n        if (this.classes.length !== 0) {\n            buf.writeInt16(this.classes.length);\n            this.classes.forEach((entry) => {\n                buf.writeASCIIString(entry.name);\n                buf.writeBoolean(entry.data !== undefined);\n                if (entry.data !== undefined) {\n                    entry.write(buf);\n                }\n            });\n        }\n    }\n}\nexport class StringTableEntry {\n    constructor(name) {\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"length\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dataBuffer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = name;\n    }\n    read(buf, type, demo) {\n        this.length = buf.readInt16();\n        this.dataBuffer = buf.readBitStream(this.length * 8);\n        if (type) {\n            this.data = new type();\n            this.data.read(this.dataBuffer, demo);\n        }\n    }\n    write(buf, demo) {\n        buf.writeInt16(this.length);\n        if (this.data) {\n            const data = SourceDemoBuffer.allocate(this.length);\n            this.data.write(data, demo);\n            this.dataBuffer = data.clone();\n        }\n        buf.writeBitStream(this.dataBuffer, this.length * 8);\n    }\n}\nexport class StringTableClass {\n    constructor(name) {\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = name;\n    }\n    read(buf) {\n        const length = buf.readInt16();\n        this.data = buf.readASCIIString(length);\n    }\n    write(buf) {\n        buf.writeInt16(this.data.length);\n        buf.writeASCIIString(this.data);\n    }\n}\n// player_info_s\nexport class PlayerInfo {\n    constructor() {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"xuid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"userId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"guid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"friendsId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"friendsName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fakePlayer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"isHltv\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"customFiles\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"filesDownloaded\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf, demo) {\n        if (demo.isNewEngine()) {\n            this.version = buf.readInt32();\n            this.xuid = buf.readInt32();\n        }\n        this.name = buf.readASCIIString(32);\n        this.userId = buf.readInt32();\n        this.guid = buf.readASCIIString(32);\n        this.friendsId = buf.readInt32();\n        this.friendsName = buf.readASCIIString(32);\n        this.fakePlayer = buf.readBoolean();\n        this.isHltv = buf.readBoolean();\n        this.customFiles = [\n            buf.readInt32(),\n            buf.readInt32(),\n            buf.readInt32(),\n            buf.readInt32(),\n        ];\n        this.filesDownloaded = buf.readInt32();\n    }\n    write(buf, demo) {\n        if (demo.isNewEngine()) {\n            buf.writeInt32(this.version);\n            buf.writeInt32(this.xuid);\n        }\n        buf.writeASCIIString(this.name, 32);\n        buf.writeInt32(this.userId);\n        buf.writeASCIIString(this.guid, 32);\n        buf.writeInt32(this.friendsId);\n        buf.writeASCIIString(this.friendsName, 32);\n        buf.writeBoolean(this.fakePlayer);\n        buf.writeBoolean(this.isHltv);\n        buf.writeInt32(this.customFiles.at(0)),\n            buf.writeInt32(this.customFiles.at(1)),\n            buf.writeInt32(this.customFiles.at(2)),\n            buf.writeInt32(this.customFiles.at(3)),\n            buf.writeInt32(this.filesDownloaded);\n    }\n}\nexport const StringTableEntryTypes = {\n    userinfo: PlayerInfo,\n};\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nexport class UserCmd {\n    constructor() {\n        Object.defineProperty(this, \"commandNumber\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tickCount\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"viewAngleX\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"viewAngleY\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"viewAngleZ\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"forwardMove\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sideMove\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"upMove\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"buttons\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"impulse\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"weaponSelect\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"weaponSubtype\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"mouseDx\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"mouseDy\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        if (buf.readBoolean())\n            this.commandNumber = buf.readInt32();\n        if (buf.readBoolean())\n            this.tickCount = buf.readInt32();\n        if (buf.readBoolean())\n            this.viewAngleX = buf.readFloat32();\n        if (buf.readBoolean())\n            this.viewAngleY = buf.readFloat32();\n        if (buf.readBoolean())\n            this.viewAngleZ = buf.readFloat32();\n        if (buf.readBoolean())\n            this.forwardMove = buf.readFloat32();\n        if (buf.readBoolean())\n            this.sideMove = buf.readFloat32();\n        if (buf.readBoolean())\n            this.upMove = buf.readFloat32();\n        if (buf.readBoolean())\n            this.buttons = buf.readInt32();\n        if (buf.readBoolean())\n            this.impulse = buf.readInt8();\n        if (buf.readBoolean()) {\n            this.weaponSelect = buf.readBits(11);\n            if (buf.readBoolean())\n                this.weaponSubtype = buf.readBits(6);\n        }\n        if (buf.readBoolean())\n            this.mouseDx = buf.readInt16();\n        if (buf.readBoolean())\n            this.mouseDy = buf.readInt16();\n    }\n    write(buf) {\n        buf.writeBoolean(this.commandNumber !== undefined);\n        if (this.commandNumber !== undefined)\n            buf.writeInt32(this.commandNumber);\n        buf.writeBoolean(this.tickCount !== undefined);\n        if (this.tickCount !== undefined)\n            buf.writeInt32(this.tickCount);\n        buf.writeBoolean(this.viewAngleX !== undefined);\n        if (this.viewAngleX !== undefined)\n            buf.writeFloat32(this.viewAngleX);\n        buf.writeBoolean(this.viewAngleY !== undefined);\n        if (this.viewAngleY !== undefined)\n            buf.writeFloat32(this.viewAngleY);\n        buf.writeBoolean(this.viewAngleZ !== undefined);\n        if (this.viewAngleZ !== undefined)\n            buf.writeFloat32(this.viewAngleZ);\n        buf.writeBoolean(this.forwardMove !== undefined);\n        if (this.forwardMove !== undefined)\n            buf.writeFloat32(this.forwardMove);\n        buf.writeBoolean(this.sideMove !== undefined);\n        if (this.sideMove !== undefined)\n            buf.writeFloat32(this.sideMove);\n        buf.writeBoolean(this.upMove !== undefined);\n        if (this.upMove !== undefined)\n            buf.writeFloat32(this.upMove);\n        buf.writeBoolean(this.buttons !== undefined);\n        if (this.buttons !== undefined)\n            buf.writeInt32(this.buttons);\n        buf.writeBoolean(this.impulse !== undefined);\n        if (this.impulse !== undefined)\n            buf.writeInt8(this.impulse);\n        buf.writeBoolean(this.weaponSelect !== undefined);\n        if (this.weaponSelect !== undefined) {\n            buf.writeBits(this.weaponSelect, 11);\n            buf.writeBoolean(this.weaponSubtype !== undefined);\n            if (this.weaponSubtype !== undefined) {\n                buf.writeBits(this.weaponSubtype, 6);\n            }\n        }\n        buf.writeBoolean(this.mouseDx !== undefined);\n        if (this.mouseDx !== undefined)\n            buf.writeInt16(this.mouseDx);\n        buf.writeBoolean(this.mouseDy !== undefined);\n        if (this.mouseDy !== undefined)\n            buf.writeInt16(this.mouseDy);\n    }\n}\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nimport { CmdInfo } from './types/CmdInfo.js';\nimport { NetMessage } from './types/NetMessages.js';\nexport class Message {\n    constructor(type) {\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tick\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"slot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.type = type;\n    }\n    static default(type) {\n        return new this(type);\n    }\n    getType() {\n        return this.type;\n    }\n    getName() {\n        return this.constructor.name;\n    }\n    getTick() {\n        return this.tick;\n    }\n    getSlot() {\n        return this.slot;\n    }\n    setTick(tick) {\n        this.tick = tick;\n        return this;\n    }\n    setSlot(slot) {\n        this.slot = slot;\n        return this;\n    }\n    read(_buf, _demo) {\n        throw new Error(`read() for ${this.constructor.name} not implemented!`);\n    }\n    write(_buf, _demo) {\n        throw new Error(`write() for ${this.constructor.name} not implemented!`);\n    }\n}\nexport class Packet extends Message {\n    constructor(type) {\n        super(type);\n        Object.defineProperty(this, \"packets\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cmdInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inSequence\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outSequence\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"restData\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    findPacket(type) {\n        const byType = type instanceof NetMessage\n            ? (packet) => packet instanceof type\n            : (packet) => type(packet);\n        return (this.packets ?? []).find(byType);\n    }\n    findPackets(type) {\n        const byType = type instanceof NetMessage\n            ? (packet) => packet instanceof type\n            : (packet) => type(packet);\n        return (this.packets ?? []).filter(byType);\n    }\n    read(buf, demo) {\n        let mssc = demo.demoProtocol === 4 ? 2 : 1;\n        this.cmdInfo = [];\n        while (mssc--) {\n            const cmd = new CmdInfo();\n            cmd.read(buf);\n            this.cmdInfo.push(cmd);\n        }\n        this.inSequence = buf.readInt32();\n        this.outSequence = buf.readInt32();\n        this.data = buf.readBitStream(buf.readInt32() * 8);\n        return this;\n    }\n    write(buf) {\n        this.cmdInfo.forEach((cmd) => cmd.write(buf));\n        buf.writeInt32(this.inSequence);\n        buf.writeInt32(this.outSequence);\n        buf.writeInt32(this.data.length / 8);\n        buf.writeBitStream(this.data, this.data.length);\n        return this;\n    }\n    *[Symbol.iterator]() {\n        for (const packet of this.packets ?? []) {\n            yield packet;\n        }\n    }\n}\nexport class SignOn extends Packet {\n}\nexport class SyncTick extends Message {\n    read() {\n        return this;\n    }\n    write() {\n        return this;\n    }\n}\nexport class ConsoleCmd extends Message {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"command\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.command = buf.readASCIIString(buf.readInt32());\n        return this;\n    }\n    write(buf) {\n        buf.writeInt32(this.command.length + 1);\n        buf.writeASCIIString(this.command, this.command.length + 1);\n        return this;\n    }\n}\nexport class UserCmd extends Message {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"cmd\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"userCmd\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"restData\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.cmd = buf.readInt32();\n        this.data = buf.readBitStream(buf.readInt32() * 8);\n        return this;\n    }\n    write(buf) {\n        buf.writeInt32(this.cmd);\n        buf.writeInt32(this.data.length / 8);\n        buf.writeBitStream(this.data, this.data.length);\n        return this;\n    }\n}\nexport class DataTable extends Message {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dataTable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.data = buf.readBitStream(buf.readInt32() * 8);\n        return this;\n    }\n    write(buf) {\n        buf.writeInt32(this.data.length / 8);\n        buf.writeBitStream(this.data, this.data.length);\n        return this;\n    }\n}\nexport class Stop extends Message {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"restData\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.restData = buf.readBitStream(buf.bitsLeft);\n        return this;\n    }\n    write(buf) {\n        buf.writeBitStream(this.restData, this.restData.bitsLeft);\n        return this;\n    }\n}\nexport class CustomData extends Message {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"unk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.unk = buf.readInt32();\n        this.data = buf.readBitStream(buf.readInt32() * 8);\n        return this;\n    }\n    write(buf) {\n        buf.writeInt32(this.unk);\n        buf.writeInt32(this.data.length / 8);\n        buf.writeBitStream(this.data, this.data.length);\n        return this;\n    }\n}\nexport class StringTable extends Message {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stringTables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"restData\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    read(buf) {\n        this.data = buf.readBitStream(buf.readInt32() * 8);\n        return this;\n    }\n    write(buf) {\n        buf.writeInt32(this.data.length / 8);\n        buf.writeBitStream(this.data, this.data.length);\n        return this;\n    }\n}\nexport const DemoMessages = {\n    NewEngine: [\n        undefined,\n        SignOn, // 1\n        Packet, // 2\n        SyncTick, // 3\n        ConsoleCmd, // 4\n        UserCmd, // 5\n        DataTable, // 6\n        Stop, // 7\n        CustomData, // 8\n        StringTable, // 9\n    ],\n    OldEngine: [\n        undefined,\n        SignOn, // 1\n        Packet, // 2\n        SyncTick, // 3\n        ConsoleCmd, // 4\n        UserCmd, // 5\n        DataTable, // 6\n        Stop, // 7\n        StringTable, // 8\n    ],\n    Message,\n    SignOn,\n    Packet,\n    SyncTick,\n    ConsoleCmd,\n    UserCmd,\n    DataTable,\n    Stop,\n    CustomData,\n    StringTable,\n};\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nexport default {\n    directory: 'portal',\n    tickrate: 1 / 0.015,\n    rules: [\n        {\n            map: 'testchmb_a_00',\n            offset: 1,\n            type: 'start',\n            match: ({ pos }) => {\n                if (pos !== undefined) {\n                    const startPos = { x: -544, y: -368.75, z: 160 };\n                    return (pos.current.x === startPos.x &&\n                        pos.current.y === startPos.y &&\n                        pos.current.z === startPos.z);\n                }\n                return false;\n            },\n        },\n        {\n            map: 'escape_02',\n            offset: 1,\n            type: 'end',\n            match: ({ cmds }) => {\n                if (cmds !== undefined) {\n                    return cmds.current.includes('startneurotoxins 99999');\n                }\n                return false;\n            },\n        },\n    ],\n};\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nexport default {\n    directory: 'portal2',\n    tickrate: 60,\n    rules: [\n        {\n            map: 'sp_a1_intro1',\n            offset: 1,\n            type: 'start',\n            match: ({ pos }) => {\n                if (pos !== undefined) {\n                    const startPos = { x: -8709.2, y: 1690.07, z: 28.0 };\n                    const tolerance = { x: 0.02, y: 0.02, z: 0.05 };\n                    return (!(Math.abs(pos.current.x - startPos.x) > tolerance.x) &&\n                        !(Math.abs(pos.current.y - startPos.y) > tolerance.y) &&\n                        !(Math.abs(pos.current.z - startPos.z) > tolerance.z));\n                }\n                return false;\n            },\n        },\n        {\n            map: 'e1912',\n            offset: -2,\n            type: 'start',\n            match: ({ pos }) => {\n                if (pos !== undefined) {\n                    const startPos = {\n                        x: -655.748779296875,\n                        y: -918.37353515625,\n                        z: -4.96875,\n                    };\n                    return (pos.previous.x === startPos.x &&\n                        pos.previous.y === startPos.y &&\n                        pos.previous.z === startPos.z &&\n                        pos.current.x !== startPos.x &&\n                        pos.current.y !== startPos.y &&\n                        pos.current.z !== startPos.z);\n                }\n                return false;\n            },\n        },\n        {\n            map: undefined,\n            offset: 0,\n            type: 'start',\n            match: ({ cmds }) => {\n                if (cmds !== undefined) {\n                    return (cmds.current.includes('dsp_player 0') &&\n                        cmds.current.includes('ss_force_primary_fullscreen 0'));\n                }\n                return false;\n            },\n        },\n        {\n            map: 'mp_coop_start',\n            offset: 0,\n            type: 'start',\n            match: ({ pos }) => {\n                if (pos !== undefined) {\n                    const startPosBlue = { x: -9896, y: -4400, z: 3048 };\n                    const startPosOrange = { x: -11168, y: -4384, z: 3040.03125 };\n                    return ((pos.current.x === startPosBlue.x &&\n                        pos.current.y === startPosBlue.y &&\n                        pos.current.z === startPosBlue.z) ||\n                        (pos.current.x === startPosOrange.x &&\n                            pos.current.y === startPosOrange.y &&\n                            pos.current.z === startPosOrange.z));\n                }\n                return false;\n            },\n        },\n        {\n            map: 'sp_a4_finale4',\n            offset: -852,\n            type: 'end',\n            match: ({ pos }) => {\n                if (pos !== undefined) {\n                    const endPos = { x: 54.1, y: 159.2, z: -201.4 };\n                    const a = (pos.current.x - endPos.x) ** 2;\n                    const b = (pos.current.y - endPos.y) ** 2;\n                    const c = 50 ** 2;\n                    return a + b < c && pos.current.z < endPos.z;\n                }\n                return false;\n            },\n        },\n        {\n            map: undefined,\n            offset: 0,\n            type: 'end',\n            match: ({ cmds }) => {\n                if (cmds !== undefined) {\n                    return (cmds.current.find((cmd) => cmd.startsWith('playvideo_end_level_transition')) !== undefined);\n                }\n                return false;\n            },\n        },\n        {\n            map: 'mp_coop_paint_longjump_intro',\n            offset: 0,\n            type: 'end',\n            match: ({ cmds }) => {\n                if (cmds !== undefined) {\n                    const outro = 'playvideo_exitcommand_nointerrupt coop_outro end_movie vault-movie_outro';\n                    return cmds.current.includes(outro);\n                }\n                return false;\n            },\n        },\n        {\n            map: 'mp_coop_paint_crazy_box',\n            offset: 0,\n            type: 'end',\n            match: ({ cmds }) => {\n                if (cmds !== undefined) {\n                    const outro = 'playvideo_exitcommand_nointerrupt dlc1_endmovie end_movie movie_outro';\n                    return cmds.current.includes(outro);\n                }\n                return false;\n            },\n        },\n    ],\n};\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nexport default {\n    directory: 'portal_stories',\n    tickrate: 60,\n    rules: [\n        {\n            map: ['sp_a1_tramride', 'st_a1_tramride'],\n            offset: 0,\n            type: 'start',\n            match: ({ pos }) => {\n                if (pos !== undefined) {\n                    const startPos = {\n                        x: -4592.0,\n                        y: -4475.4052734375,\n                        z: 108.683975219727,\n                    };\n                    return (pos.previous.x === startPos.x &&\n                        pos.previous.y === startPos.y &&\n                        pos.previous.z === startPos.z &&\n                        pos.current.x !== startPos.x &&\n                        pos.current.y !== startPos.y &&\n                        pos.current.z !== startPos.z);\n                }\n                return false;\n            },\n        },\n        {\n            map: ['sp_a4_finale', 'st_a4_finale'],\n            offset: 0,\n            type: 'end',\n            match: ({ cmds }) => {\n                if (cmds !== undefined) {\n                    const outro = 'playvideo_exitcommand_nointerrupt aegis_interior.bik end_movie movie_aegis_interior';\n                    return cmds.current.includes(outro);\n                }\n                return false;\n            },\n        },\n    ],\n};\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nexport default {\n    directory: 'aperturetag',\n    tickrate: 60,\n    rules: [\n        {\n            map: 'gg_intro_wakeup',\n            offset: 0,\n            type: 'start',\n            match: ({ pos }) => {\n                if (pos !== undefined) {\n                    const startPos = { x: -723.0, y: -2481.0, z: 17.0 };\n                    return (pos.previous.x === startPos.x &&\n                        pos.previous.y === startPos.y &&\n                        pos.previous.z === startPos.z &&\n                        pos.current.x !== startPos.x &&\n                        pos.current.y !== startPos.y &&\n                        pos.current.z !== startPos.z);\n                }\n                return false;\n            },\n        },\n        {\n            map: 'gg_stage_theend',\n            offset: 0,\n            type: 'end',\n            match: ({ cmds }) => {\n                if (cmds !== undefined) {\n                    const outro = 'playvideo_exitcommand_nointerrupt at_credits end_movie credits_video';\n                    return cmds.current.includes(outro);\n                }\n                return false;\n            },\n        },\n        {\n            map: undefined,\n            offset: 0,\n            type: 'start',\n            match: ({ cmds }) => {\n                if (cmds !== undefined) {\n                    return (cmds.current.includes('dsp_player 0') &&\n                        cmds.current.includes('ss_force_primary_fullscreen 0'));\n                }\n                return false;\n            },\n        },\n        {\n            map: undefined,\n            offset: 0,\n            type: 'end',\n            match: ({ cmds }) => {\n                if (cmds !== undefined) {\n                    return (cmds.current.find((cmd) => cmd.startsWith('playvideo_end_level_transition')) !== undefined);\n                }\n                return false;\n            },\n        },\n    ],\n};\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nimport Portal from './Portal.js';\nimport Portal2 from './Portal2.js';\nimport PortalStoriesMel from './PortalStoriesMel.js';\nimport ApertureTag from './ApertureTag.js';\nexport const Games = {\n    Portal,\n    Portal2,\n    PortalStoriesMel,\n    ApertureTag,\n};\n// prettier-ignore\nexport const SourceGames = [\n    Portal,\n    Portal2,\n    PortalStoriesMel,\n    ApertureTag,\n];\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nimport { DataTable, DemoMessages, Message, Packet, SyncTick } from './messages.js';\nimport { SendTable, ServerClassInfo } from './types/DataTables.js';\nimport { NetMessage, NetMessages } from './types/NetMessages.js';\nimport { StringTable } from './types/StringTables.js';\nimport { UserCmd } from './types/UserCmd.js';\nimport { SourceDemoBuffer } from './buffer.js';\nimport { SourceGames } from './speedrun/games/mod.js';\nexport const Portal2EngineGameMods = [\n    'portal2',\n    'TWTM',\n    'aperturetag',\n    'portal_stories',\n    'portalreloaded',\n    'Portal 2 Speedrun Mod',\n];\nexport class SourceDemo {\n    constructor() {\n        Object.defineProperty(this, \"demoFileStamp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"demoProtocol\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"networkProtocol\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serverName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"mapName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"gameDirectory\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"playbackTime\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"playbackTicks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"playbackFrames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"signOnLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"messages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"game\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"gameEventManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"isPortal2Engine\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    static default() {\n        return new this();\n    }\n    isNewEngine() {\n        return this.demoProtocol === 4;\n    }\n    findMessage(type) {\n        const byType = type.prototype instanceof Message\n            ? (msg) => msg instanceof type\n            : (msg) => type(msg);\n        return (this.messages ?? []).find(byType);\n    }\n    findMessages(type) {\n        const byType = type.prototype instanceof Message\n            ? (msg) => msg instanceof type\n            : (msg) => type(msg);\n        return (this.messages ?? []).filter(byType);\n    }\n    findPacket(type) {\n        const byType = type.prototype instanceof NetMessage\n            ? (packet) => packet instanceof type\n            : (packet) => type(packet);\n        for (const msg of this.messages ?? []) {\n            if (msg instanceof Packet) {\n                const packet = (msg.packets ?? []).find(byType);\n                if (packet) {\n                    return packet;\n                }\n            }\n        }\n    }\n    findPackets(type) {\n        const isType = type.prototype instanceof NetMessage\n            ? (packet) => packet instanceof type\n            : (packet) => type(packet);\n        const packets = [];\n        for (const msg of this.messages ?? []) {\n            if (msg instanceof Packet) {\n                for (const packet of msg.packets ?? []) {\n                    if (isType(packet)) {\n                        packets.push(packet);\n                    }\n                }\n            }\n        }\n        return packets;\n    }\n    readHeader(buf) {\n        this.demoFileStamp = buf.readASCIIString(8);\n        if (this.demoFileStamp !== 'HL2DEMO') {\n            throw new Error(`Invalid demo file stamp: ${this.demoFileStamp}`);\n        }\n        this.demoProtocol = buf.readInt32();\n        this.networkProtocol = buf.readInt32();\n        this.serverName = buf.readASCIIString(260);\n        this.clientName = buf.readASCIIString(260);\n        this.mapName = buf.readASCIIString(260);\n        this.gameDirectory = buf.readASCIIString(260);\n        this.playbackTime = buf.readFloat32();\n        this.playbackTicks = buf.readInt32();\n        this.playbackFrames = buf.readInt32();\n        this.signOnLength = buf.readInt32();\n        this.messages = [];\n        this.isPortal2Engine = Portal2EngineGameMods.includes(this.gameDirectory);\n        return this;\n    }\n    writeHeader(buf) {\n        buf.writeASCIIString(this.demoFileStamp);\n        buf.writeInt32(this.demoProtocol);\n        buf.writeInt32(this.networkProtocol);\n        buf.writeASCIIString(this.serverName, 260);\n        buf.writeASCIIString(this.clientName, 260);\n        buf.writeASCIIString(this.mapName, 260);\n        buf.writeASCIIString(this.gameDirectory, 260);\n        buf.writeFloat32(this.playbackTime);\n        buf.writeInt32(this.playbackTicks);\n        buf.writeInt32(this.playbackFrames);\n        buf.writeInt32(this.signOnLength);\n        return this;\n    }\n    readMessages(buf) {\n        if (!this.messages) {\n            this.messages = [];\n        }\n        const readSlot = this.isNewEngine();\n        const demoMessages = readSlot ? DemoMessages.NewEngine : DemoMessages.OldEngine;\n        while (buf.bitsLeft > 8) {\n            const type = buf.readInt8();\n            const messageType = demoMessages[type];\n            if (messageType) {\n                const message = messageType.default(type).setTick(buf.readInt32());\n                if (readSlot) {\n                    message.setSlot(buf.readInt8());\n                }\n                this.messages.push(message.read(buf, this));\n            }\n            else {\n                throw new Error(`Unknown demo message type: ${type}`);\n            }\n        }\n        return this;\n    }\n    writeMessages(buf) {\n        (this.messages ?? []).forEach((message) => {\n            buf.writeInt8(message.type);\n            buf.writeInt32(message.tick);\n            if (message.slot !== undefined) {\n                buf.writeInt8(message.slot);\n            }\n            message.write(buf, this);\n        });\n    }\n    readUserCmds() {\n        for (const message of this.messages ?? []) {\n            if (message instanceof DemoMessages.UserCmd) {\n                const data = SourceDemoBuffer.from(message.data);\n                const cmd = new UserCmd();\n                cmd.read(data);\n                message.userCmd = cmd;\n                if (data.bitsLeft) {\n                    message.restData = data.readBitStream(data.bitsLeft);\n                }\n            }\n        }\n        return this;\n    }\n    writeUserCmds() {\n        for (const message of this.messages ?? []) {\n            if (message instanceof DemoMessages.UserCmd && message.userCmd) {\n                const data = SourceDemoBuffer.allocateBits(message.data.length);\n                message.userCmd.write(data);\n                if (message.restData) {\n                    data.writeBitStream(message.restData, message.restData.bitsLeft);\n                }\n                message.data = data.clone();\n            }\n        }\n        return this;\n    }\n    readStringTables() {\n        for (const message of this.messages ?? []) {\n            if (message instanceof DemoMessages.StringTable) {\n                const stringTables = [];\n                const data = SourceDemoBuffer.from(message.data);\n                let tables = data.readInt8() ?? 0;\n                while (tables--) {\n                    const table = new StringTable();\n                    table.read(data, this);\n                    stringTables.push(table);\n                }\n                if (data.bitsLeft) {\n                    message.restData = data.readBitStream(data.bitsLeft);\n                }\n                message.stringTables = stringTables;\n            }\n        }\n        return this;\n    }\n    writeStringTables() {\n        for (const message of this.messages ?? []) {\n            if (message instanceof DemoMessages.StringTable && message.stringTables) {\n                const data = SourceDemoBuffer.allocateBits(message.data.length);\n                data.writeInt8(message.stringTables.length);\n                message.stringTables.forEach((stringTable) => {\n                    stringTable.write(data, this);\n                });\n                if (message.restData) {\n                    data.writeBitStream(message.restData, message.restData.bitsLeft);\n                }\n                message.data = data.clone();\n            }\n        }\n        return this;\n    }\n    readDataTables() {\n        for (const message of this.messages ?? []) {\n            if (message instanceof DataTable) {\n                const dataTable = {\n                    tables: [],\n                    serverClasses: [],\n                    restData: undefined,\n                };\n                const data = SourceDemoBuffer.from(message.data);\n                while (data.readBoolean()) {\n                    const dt = new SendTable();\n                    dt.read(data, this);\n                    dataTable.tables.push(dt);\n                }\n                let classes = data.readInt16() ?? 0;\n                while (classes--) {\n                    const sc = new ServerClassInfo();\n                    sc.read(data);\n                    dataTable.serverClasses.push(sc);\n                }\n                if (data.bitsLeft) {\n                    dataTable.restData = data.readBitStream(data.bitsLeft);\n                }\n                message.dataTable = dataTable;\n            }\n        }\n        return this;\n    }\n    writeDataTables() {\n        for (const message of this.messages ?? []) {\n            if (message instanceof DataTable && message.dataTable) {\n                const data = SourceDemoBuffer.allocateBits(message.data.length);\n                message.dataTable.tables.forEach((dt) => {\n                    data.writeBoolean(true);\n                    dt.write(data, this);\n                });\n                data.writeBoolean(false);\n                data.writeInt16(message.dataTable.serverClasses.length);\n                message.dataTable.serverClasses.forEach((sc) => {\n                    sc.write(data);\n                });\n                if (message.dataTable.restData) {\n                    data.writeBitStream(message.dataTable.restData, message.dataTable.restData.bitsLeft);\n                }\n                message.data = data.clone();\n            }\n        }\n        return this;\n    }\n    readPackets(netMessages) {\n        netMessages = netMessages ??\n            (this.isNewEngine() ? NetMessages.Portal2Engine : NetMessages.HalfLife2Engine);\n        for (const message of this.messages ?? []) {\n            if (message instanceof Packet) {\n                const packets = [];\n                const data = SourceDemoBuffer.from(message.data);\n                while ((data.bitsLeft ?? 0) > 6) {\n                    const type = data.readBits(6) ?? -1;\n                    const NetMessage = netMessages.at(type);\n                    if (NetMessage) {\n                        const packet = new NetMessage(type);\n                        packet.read(data, this);\n                        packets.push(packet);\n                    }\n                    else {\n                        throw new Error(`Net message type ${type} unknown!`);\n                    }\n                }\n                if (data.bitsLeft) {\n                    message.restData = data.readBitStream(data.bitsLeft);\n                }\n                message.packets = packets;\n            }\n        }\n        return this;\n    }\n    writePackets() {\n        for (const message of this.messages ?? []) {\n            if (message instanceof Packet && message.packets) {\n                const data = SourceDemoBuffer.allocateBits(message.data.length);\n                message.packets.forEach((packet) => {\n                    data.writeBits(packet.type, 6);\n                    packet.write(data, this);\n                });\n                if (message.restData) {\n                    data.writeBitStream(message.restData, message.restData.bitsLeft);\n                }\n                message.data = data.clone();\n            }\n        }\n        return this;\n    }\n    detectGame(sourceGames = SourceGames) {\n        this.game = sourceGames.find((game) => game.directory === this.gameDirectory);\n        return this;\n    }\n    getIntervalPerTick() {\n        if (this.playbackTicks === undefined || this.playbackTime === undefined) {\n            throw new Error('Cannot find tickrate without parsing the header.');\n        }\n        if (this.playbackTicks === 0) {\n            if (this.game !== undefined) {\n                return 1 / this.game.tickrate;\n            }\n            throw new Error('Cannot find ipt of null tick demo.');\n        }\n        return this.playbackTime / this.playbackTicks;\n    }\n    getTickrate() {\n        if (this.playbackTicks === undefined || this.playbackTime === undefined) {\n            throw new Error('Cannot find tickrate without parsing the header.');\n        }\n        if (this.playbackTime === 0) {\n            if (this.game !== undefined) {\n                return this.game.tickrate;\n            }\n            throw new Error('Cannot find tickrate of null tick demo.');\n        }\n        return this.playbackTicks / this.playbackTime;\n    }\n    adjustTicks() {\n        if (!this.messages?.length) {\n            throw new Error('Cannot adjust ticks without parsed messages.');\n        }\n        let synced = false;\n        let last = 0;\n        for (const message of this.messages) {\n            if (message instanceof SyncTick) {\n                synced = true;\n            }\n            if (!synced) {\n                message.tick = 0;\n            }\n            else if (message.tick < 0) {\n                message.tick = last;\n            }\n            last = message.tick;\n        }\n        return this;\n    }\n    adjustRange(endTick = 0, startTick = 0, tickrate = undefined) {\n        if (!this.messages?.length) {\n            throw new Error('Cannot adjust range without parsed messages.');\n        }\n        if (endTick < 1) {\n            const packets = this.findMessages(Packet);\n            const lastPacket = packets[packets.length - 1];\n            if (!lastPacket) {\n                throw new Error('Cannot adjust range without parsed packets.');\n            }\n            endTick = lastPacket.tick;\n        }\n        const delta = endTick - startTick;\n        if (delta < 0) {\n            throw new Error('Start tick is greater than end tick.');\n        }\n        const ipt = tickrate === undefined ? this.getIntervalPerTick() : 1 / tickrate;\n        this.playbackTicks = delta;\n        this.playbackTime = ipt * delta;\n        return this;\n    }\n    rebaseFrom(tick) {\n        if (!this.messages?.length) {\n            throw new Error('Cannot adjust ticks without parsed messages.');\n        }\n        let synced = false;\n        let last = 0;\n        for (const message of this.messages) {\n            if (message.tick === tick) {\n                synced = true;\n            }\n            if (!synced) {\n                message.tick = 0;\n            }\n            else if (message.tick < 0) {\n                message.tick = last;\n            }\n            else {\n                message.tick -= tick;\n            }\n            last = message.tick;\n        }\n        return this;\n    }\n    getSyncedTicks(demo, viewTolerance = 1, splitScreenIndex = 0) {\n        if (!this.messages?.length || !demo.messages?.length) {\n            throw new Error('Cannot adjust ticks without parsed messages.');\n        }\n        const syncedTicks = [];\n        for (const message of this.messages) {\n            if (message instanceof Packet) {\n                const view = message.cmdInfo?.at(splitScreenIndex)?.viewOrigin;\n                const result = demo.messages.find((msg) => {\n                    if (!(msg instanceof Packet)) {\n                        return false;\n                    }\n                    const match = msg.cmdInfo?.at(splitScreenIndex)?.viewOrigin;\n                    return (Math.abs((match?.x ?? 0) - (view?.x ?? 0)) <= viewTolerance &&\n                        Math.abs((match?.y ?? 0) - (view?.y ?? 0)) <= viewTolerance &&\n                        Math.abs((match?.z ?? 0) - (view?.z ?? 0)) <= viewTolerance);\n                });\n                if (result !== undefined) {\n                    syncedTicks.push({\n                        source: message.tick,\n                        destination: result.tick,\n                        delta: Math.abs((message.tick ?? 0) - result.tick),\n                        x: message.cmdInfo?.at(splitScreenIndex)?.viewOrigin?.x,\n                        y: message.cmdInfo?.at(splitScreenIndex)?.viewOrigin?.y,\n                        z: message.cmdInfo?.at(splitScreenIndex)?.viewOrigin?.z,\n                    });\n                }\n            }\n        }\n        return syncedTicks;\n    }\n}\n", "// Copyright (c) 2018-2024, NeKz\n// SPDX-License-Identifier: MIT\nimport { SourceDemoBuffer } from './buffer.js';\nimport { SourceDemo } from './demo.js';\nexport const DefaultParsingOptions = {\n    header: true,\n    messages: true,\n    stringTables: false,\n    dataTables: false,\n    packets: false,\n    userCmds: false,\n};\nexport class SourceDemoParser {\n    constructor(options = DefaultParsingOptions) {\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.options = options;\n    }\n    static default() {\n        return new this(DefaultParsingOptions);\n    }\n    setOptions(options) {\n        this.options = {\n            ...this.options,\n            ...options,\n        };\n        return this;\n    }\n    prepare(buffer) {\n        const extended = new Uint8Array(buffer.byteLength + 4 - (buffer.byteLength % 4));\n        extended.set(new Uint8Array(buffer), 0);\n        return new SourceDemoBuffer(extended.buffer);\n    }\n    parse(buffer) {\n        const buf = this.prepare(buffer);\n        const demo = SourceDemo.default();\n        if (this.options.header)\n            demo.readHeader(buf);\n        if (this.options.messages)\n            demo.readMessages(buf);\n        if (demo.messages?.length) {\n            if (this.options.stringTables)\n                demo.readStringTables();\n            if (this.options.dataTables)\n                demo.readDataTables();\n            if (this.options.packets)\n                demo.readPackets();\n            if (this.options.userCmds)\n                demo.readUserCmds();\n        }\n        return demo;\n    }\n    save(demo, bufferSize) {\n        if (!this.options.header || !this.options.header) {\n            throw new Error('Cannot save demo without parsed header and messages.');\n        }\n        if (demo.messages?.length) {\n            if (this.options.stringTables)\n                demo.writeStringTables();\n            if (this.options.dataTables)\n                demo.writeDataTables();\n            if (this.options.packets)\n                demo.writePackets();\n            if (this.options.userCmds)\n                demo.writeUserCmds();\n        }\n        const padding = 4 - (bufferSize % 4);\n        const extended = new Uint8Array(bufferSize + padding);\n        const buf = new SourceDemoBuffer(extended.buffer);\n        demo.writeHeader(buf);\n        demo.writeMessages(buf);\n        const result = new Uint8Array(bufferSize);\n        result.set(extended.slice(0, bufferSize), 0);\n        return result;\n    }\n}\n"],
  "mappings": "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",
  "names": ["descriptor", "HudPrint", "ShakeCommand", "CreditsType", "GameTimescaleInterpolators", "PortalCreditsType", "PortalFizzleType", "entries", "StringTable", "UserCmd", "UserCmd", "StringTable", "NetMessage", "_a", "_b"]
}
